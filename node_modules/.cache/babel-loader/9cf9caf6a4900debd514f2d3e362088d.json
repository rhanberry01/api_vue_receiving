{"remainingRequest":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\thread-loader\\dist\\cjs.js!E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\babel-loader\\lib\\index.js!E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\src\\components\\transfer\\receive\\Receive.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\src\\components\\transfer\\receive\\Receive.vue","mtime":1585935235912},{"path":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport _JSON$stringify from \"E:\\\\node-projects\\\\Receiving\\\\franchisee\\\\api_vue_receiving\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"E:\\\\node-projects\\\\Receiving\\\\franchisee\\\\api_vue_receiving\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport { msgError, apiUrl, msgSuccess, tokenApi, getSessionCurrentUrl } from './../../../assets/custom/custom.js';\nexport default {\n  data: function data() {\n    return {\n      file: '',\n      p_checked_by: '',\n      p_delivered_by: '',\n      p_requested_by: '',\n      p_delivery_date: '',\n      p_date_created: '',\n      p_br_code_out: '',\n      p_br_code_in: '',\n      p_remarks: '',\n      p_qty: 1,\n      p_barcode: '',\n      p_transfer_no: this.$route.query.transfer_id,\n      total_sku: 0,\n      total_qty_receive: 0,\n      total_qty_ordered: 0,\n      total_qty_scanned: 0,\n      total_sku_remaining: 0,\n      total_remaining_item: 0,\n      loading_po: false,\n      loading_barcode: false,\n      temporary_items: [],\n      loading_receive_details: false,\n      btn_post: true,\n      loading_post: false,\n      deviceScan: false,\n      list_receive_transfer_details: [],\n      list_receive_transfer_details_temp: [],\n      receive_items: [],\n      last_item_scanned: []\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.getPlatform();\n\n            case 2:\n              _context.next = 4;\n              return this.fetch_receive_transfer_details();\n\n            case 4:\n              _context.next = 6;\n              return this.fetch_temporary_items(this.p_transfer_no);\n\n            case 6:\n              getSessionCurrentUrl(this, 'TransferReceive');\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    openscan: function () {\n      var _openscan = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                window.qsprint.openscan();\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function openscan() {\n        return _openscan.apply(this, arguments);\n      }\n\n      return openscan;\n    }(),\n    fetch_barcode: function () {\n      var _fetch_barcode = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var data;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.loading_barcode = true; //activate loading\n\n                _context3.prev = 1;\n                data = {\n                  p_barcode: $('#item_barcode').val(),\n                  p_qty: this.p_qty,\n                  p_transfer_no: this.p_transfer_no\n                };\n                _context3.next = 5;\n                return axios.post(apiUrl('purchaser/receive_po/transfer/receive/fetch_barcode'), data, tokenApi());\n\n              case 5:\n                _context3.next = 7;\n                return this.fetch_temporary_items(this.p_transfer_no);\n\n              case 7:\n                _context3.next = 13;\n                break;\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](1);\n                _context3.next = 13;\n                return this.handdleError(_context3.t0);\n\n              case 13:\n                this.p_barcode = \"\";\n                this.p_qty = 1;\n                this.loading_barcode = false; //deactivate loading\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[1, 9]]);\n      }));\n\n      function fetch_barcode() {\n        return _fetch_barcode.apply(this, arguments);\n      }\n\n      return fetch_barcode;\n    }(),\n    fetch_temporary_items: function () {\n      var _fetch_temporary_items = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(transfer_id) {\n        var query, result, data;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                query = {\n                  params: {\n                    p_transfer_no: transfer_id\n                  },\n                  headers: tokenApi('token', 'header')\n                };\n                _context4.next = 4;\n                return axios.get(apiUrl('purchaser/receive_po/transfer/receive/fetch_temporary_items'), query);\n\n              case 4:\n                result = _context4.sent;\n                data = result.data;\n                this.btn_post = data.temporary_items.length == 0 ? true : false;\n                this.receive_items = data.receive_items;\n                this.temporary_items = data.temporary_items;\n                this.total_sku = data.total_sku;\n                this.total_qty_receive = data.total_qty_receive;\n                this.total_qty_ordered = data.total_qty_ordered;\n                this.total_qty_scanned = data.total_qty_scanned;\n                this.total_sku_remaining = data.receive_items.length - data.total_all_sku;\n                this.total_remaining_item = data.total_qty_ordered - data.total_qty_scanned;\n                this.last_item_scanned = data.last_item_scanned;\n                _context4.next = 22;\n                break;\n\n              case 18:\n                _context4.prev = 18;\n                _context4.t0 = _context4[\"catch\"](0);\n                _context4.next = 22;\n                return this.handdleError(_context4.t0);\n\n              case 22:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 18]]);\n      }));\n\n      function fetch_temporary_items(_x) {\n        return _fetch_temporary_items.apply(this, arguments);\n      }\n\n      return fetch_temporary_items;\n    }(),\n    delete_items: function () {\n      var _delete_items = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(temp_receiving_id, id) {\n        var confirm, data;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                confirm = window.confirm('Confirm delete');\n\n                if (!confirm) {\n                  _context5.next = 9;\n                  break;\n                }\n\n                data = {\n                  p_temp_id: temp_receiving_id,\n                  p_transfer_no: this.p_transfer_no,\n                  p_id: id\n                };\n                _context5.next = 6;\n                return axios.post(apiUrl('purchaser/receive_po/transfer/receive/delete_items'), data, tokenApi());\n\n              case 6:\n                _context5.next = 8;\n                return this.fetch_temporary_items(this.p_transfer_no);\n\n              case 8:\n                msgSuccess(200, \"Successfully deleted items\");\n\n              case 9:\n                _context5.next = 14;\n                break;\n\n              case 11:\n                _context5.prev = 11;\n                _context5.t0 = _context5[\"catch\"](0);\n                this.handdleError(_context5.t0);\n\n              case 14:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 11]]);\n      }));\n\n      function delete_items(_x2, _x3) {\n        return _delete_items.apply(this, arguments);\n      }\n\n      return delete_items;\n    }(),\n    fetch_receive_transfer_details: function () {\n      var _fetch_receive_transfer_details = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6() {\n        var query, result, data;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this.loading_receive_details = true; //activate loading\n\n                _context6.prev = 1;\n                query = {\n                  params: {\n                    p_transfer_no: this.p_transfer_no\n                  },\n                  headers: tokenApi('token', 'header')\n                };\n                _context6.next = 5;\n                return axios.get(apiUrl('purchaser/receive_po/transfer/receive/fetch_receive_transfer_details'), query);\n\n              case 5:\n                result = _context6.sent;\n                data = result.data;\n                this.p_requested_by = data.transfer.requested_by;\n                this.p_delivery_date = data.transfer.delivery_date;\n                this.p_date_created = data.transfer.date_created;\n                this.p_br_code_out = data.transfer.br_code_out;\n                this.p_br_code_in = data.transfer.br_code_in;\n                _context6.next = 18;\n                break;\n\n              case 14:\n                _context6.prev = 14;\n                _context6.t0 = _context6[\"catch\"](1);\n                _context6.next = 18;\n                return this.handdleError(_context6.t0);\n\n              case 18:\n                this.loading_receive_details = false; //deactivate loading\n\n              case 19:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[1, 14]]);\n      }));\n\n      function fetch_receive_transfer_details() {\n        return _fetch_receive_transfer_details.apply(this, arguments);\n      }\n\n      return fetch_receive_transfer_details;\n    }(),\n    post_receiving: function () {\n      var _post_receiving = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7() {\n        var formData, i, file;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                formData = new FormData(); // if (this.file == \"\") {\n                //     return msgError(401, \"Invoice file is required\")\n                // }\n\n                this.btn_post = true;\n                this.loading_post = true;\n\n                for (i = 0; i < this.file.length; i++) {\n                  file = this.file[i];\n                  formData.append('file[' + i + ']', file);\n                }\n\n                formData.append('p_remarks', this.p_remarks);\n                formData.append('p_transfer_no', this.p_transfer_no);\n                _context7.next = 9;\n                return axios.post(apiUrl('purchaser/receive_po/transfer/receive/post_receiving'), formData, tokenApi());\n\n              case 9:\n                this.$session.flash.set('p_message', 'OK');\n                this.$router.push({\n                  name: 'TransferReceive'\n                });\n                _context7.next = 13;\n                return this.refresh();\n\n              case 13:\n                _context7.next = 18;\n                break;\n\n              case 15:\n                _context7.prev = 15;\n                _context7.t0 = _context7[\"catch\"](0);\n                this.handdleError(_context7.t0);\n\n              case 18:\n                this.btn_post = false;\n                this.loading_post = false;\n\n              case 20:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[0, 15]]);\n      }));\n\n      function post_receiving() {\n        return _post_receiving.apply(this, arguments);\n      }\n\n      return post_receiving;\n    }(),\n    handleFileUpload: function () {\n      var _handleFileUpload = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8() {\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                this.file = this.$refs.file.files;\n\n              case 1:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function handleFileUpload() {\n        return _handleFileUpload.apply(this, arguments);\n      }\n\n      return handleFileUpload;\n    }(),\n    refresh: function () {\n      var _refresh = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee9() {\n        var input;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                input = this.$refs.file;\n                input.type = 'text';\n                input.type = 'file';\n                this.file = '';\n                this.p_requested_by = '';\n                this.p_delivery_date = '';\n                this.p_date_created = '';\n                this.p_br_code_out = '';\n                this.p_br_code_in = '';\n                this.p_qty = 1;\n                this.p_barcode = '';\n                this.p_transfer_no = this.$route.query.transfer_id;\n                this.total_sku = 0;\n                this.total_qty_receive = 0;\n                this.total_qty_ordered = 0;\n                this.total_qty_scanned = 0;\n                this.total_sku_remaining = 0;\n                this.total_remaining_item = 0;\n                this.loading_po = false;\n                this.loading_barcode = false;\n                this.temporary_items = [];\n                this.loading_receive_details = false;\n                this.list_receive_transfer_details = [];\n                this.list_receive_transfer_details_temp = [];\n                this.receive_items = [];\n\n              case 25:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function refresh() {\n        return _refresh.apply(this, arguments);\n      }\n\n      return refresh;\n    }(),\n    handdleError: function () {\n      var _handdleError = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee10() {\n        var error,\n            response,\n            status,\n            message,\n            _args10 = arguments;\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                error = _args10.length > 0 && _args10[0] !== undefined ? _args10[0] : null;\n\n                if (!(error != null)) {\n                  _context10.next = 7;\n                  break;\n                }\n\n                response = JSON.parse(_JSON$stringify(error));\n                status = response.response.status.toString();\n                message = response.response.data.error === undefined ? response.response.data.message : response.response.data.error.message;\n                msgError(status, message);\n                return _context10.abrupt(\"return\", true);\n\n              case 7:\n                msgError(401, \"Something Wrong\");\n\n              case 8:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }));\n\n      function handdleError() {\n        return _handdleError.apply(this, arguments);\n      }\n\n      return handdleError;\n    }(),\n    getPlatform: function () {\n      var _getPlatform = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee11() {\n        var platform, i;\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                platform = [\"Win32\", \"Android\", \"iOS\", \"Linux armv8l\"];\n\n                for (i = 0; i < platform.length; i++) {\n                  if (navigator.platform.indexOf(platform[i]) > -1) {\n                    if (platform[i] == 'Linux armv8l') {\n                      this.deviceScan = true;\n                    }\n                  }\n                }\n\n              case 2:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function getPlatform() {\n        return _getPlatform.apply(this, arguments);\n      }\n\n      return getPlatform;\n    }()\n  }\n};",{"version":3,"sources":["Receive.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"panel-body\">\r\n       \r\n        <!-- Main content -->\r\n        <div class=\"content-wrapper col-sm-12\" >\r\n            \r\n            <div class=\"panel panel-flat\">\r\n                <div class=\"panel-heading\">\r\n                    <p>\r\n                         <a style=\"border-radius:0px;\">&nbsp;&nbsp;<i class=\"icon icon-undo\"></i><router-link to=\"/receive/transfer/receive\"> CLICK ME TO BACK</router-link> </a>\r\n                    </p>\r\n                    <p class=\"panel-title\">ITEMS FOR TRANSFER # {{ p_transfer_no }} </p>\r\n                    <div class=\"heading-elements\">\r\n                        <ul class=\"icons-list\">\r\n                            <li><a data-action=\"collapse\"></a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table table-bordered\">\r\n                        <thead >\r\n                            <tr v-show=\"loading_receive_details\">\r\n                                <th colspan=\"2\"  style=\"text-align:center\">\r\n                                    <p>\r\n                                        <i class=\"icon-spinner4 spinner position-left\"></i> PLEASE WAIT ..\r\n                                    </p>\r\n                                </th>\r\n                            </tr>\r\n                            <tr v-show=\"!loading_receive_details\">\r\n                                <th style=\"text-align:center;font-size:12px;\">\r\n                                    TRANSFER #: {{ p_transfer_no }}<br>\r\n                                    DELIVERY DATE: {{ p_delivery_date | date  }}<br>\r\n                                    FROM BRANCH:  {{ p_br_code_out }}\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th style=\"text-align:center;font-size:12px;\">\r\n                                    REQUESTED BY: {{ p_requested_by | uppercase }}<br>\r\n                                    DATE CREATED: {{ p_date_created | date }}<br>\r\n                                    TO BRANCH: {{ p_br_code_in }}\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n            <!-- Main content -->\r\n        <div class=\"content-wrapper  col-sm-12\" >\r\n            <div class=\"panel panel-flat\">\r\n                <div class=\"panel-heading\">\r\n                    <p class=\"panel-title\">Item Scanned</p>\r\n                </div>\r\n\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Item name</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                             <tr v-for=\"(row, i) in temporary_items\" :key=\"i\">\r\n                                <td> {{row.item_name }} <br>  \r\n                                QTY -> {{row.qty }} <br>\r\n                                UOM -> {{row.uom }} </td>\r\n                                <td> \r\n                                    <button class=\"btn btn-danger btn-sm\" v-on:click=\"delete_items(row.temp_receiving_id, row.id)\"><i class=\"icon-cancel-circle2\"></i></button>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <p v-show=\"loading_barcode\" class=\"pull-center\" >\r\n                                        <i class=\"icon-spinner4 spinner position-left\"></i> PLEASE WAIT ..\r\n                                    </p>\r\n                                    <button v-on:click=\"openscan()\" v-show=\"deviceScan\" class=\"btn btn-info btn-xs pull-left\" style=\"border-radius:0px;\">CLICK TO SCAN BARCODE</button>\r\n                                    <input class=\"form-control\" placeholder=\"Enter Barcode\" id=\"item_barcode\" v-model=\"p_barcode\" v-on:keyup.13=\"fetch_barcode\">\r\n                                </td>\r\n                                <td><input  style=\"text-align:left;\" class=\"form-control\"  v-model=\"p_qty\"></td>\r\n                            <tr>\r\n                            <tr>\r\n                                <td style=\"text-align:center !important\">SKU SCANNED: {{ total_sku }}</td>\r\n                                <td style=\"text-align:center !important\">SKU REMAINING:  {{ total_sku_remaining }}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style=\"text-align:center !important\">TOTAL QTY SCANNED:  {{ total_qty_scanned }}</td>\r\n                                <td style=\"text-align:center !important\">REMAINING ITEMS:  {{ total_remaining_item }}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style=\"text-align:center !important\">TOTAL PO QTY POSTED:  {{ total_qty_receive }}</td>\r\n                                <td style=\"text-align:center !important\">TOTAL PO QTY: {{ total_qty_ordered }}</td>\r\n                            </tr>\r\n                           <tr>\r\n                            <td colspan=\"4\">\r\n                                    <textarea name=\"\" id=\"\" class=\"form-control\" placeholder=\"Remarks\" v-model=\"p_remarks\"></textarea>\r\n                                </td>\r\n                            <tr>\r\n                                <td colspan=\"4\">\r\n                                  <input class=\"form-control\" style=\"text-align:left;\" multiple id=\"file\" ref=\"file\"  v-on:change=\"handleFileUpload()\" type=\"file\" >\r\n                                  ( Maaring Mag upload ng Multipe Scan Invoice Kung ito ay IMAGE file ) <br>\r\n                                  ( Kung Ito naman ay pdf file isa lang ang maaring mong ma upload )\r\n                                </td>\r\n                            <tr>\r\n                            <tr>\r\n                                <td colspan=\"4\">\r\n                                    <button type=\"button\" :disabled=\"btn_post\" class=\"btn btn-sm btn-primary col-xs-12\" v-on:click=\"post_receiving()\">\r\n                                        <div v-if=\"loading_post\">\r\n                                            <i class=\"icon-spinner4 spinner position-left\"></i> PLEASE WAIT ..\r\n                                        </div>\r\n                                        <div v-if=\"!loading_post\">\r\n                                            <i class=\"icon-checkmark\"></i> POST\r\n                                        </div>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- End Main content -->\r\n <!-- last item  -->\r\n        <div class=\"content-wrapper col-sm-12\" >\r\n            <div class=\"panel panel-flat\">\r\n                <div class=\"panel-heading\">\r\n                    <p class=\"panel-title\">LAST ITEM SCANNED</p>\r\n                    <div class=\"heading-elements\">\r\n                        <ul class=\"icons-list\">\r\n                            <li><a data-action=\"collapse\"></a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ITEM NAME</th>\r\n                                <th>UOM</th>\r\n                                <th>REMAINING QTY</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr v-for=\"(row, i) in last_item_scanned\" :key=\"i\">\r\n                                <td> {{row.description }} </td>\r\n                                <td> {{row.uom }} </td>\r\n                                <td> {{row.remaining }} </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- last item  -->\r\n        <!-- Main content -->\r\n        <div class=\"content-wrapper col-sm-12\" >\r\n            <div class=\"panel panel-flat\">\r\n                <div class=\"panel-heading\">\r\n                    <p class=\"panel-title\">ITEMS FOR TRANSFER</p>\r\n                    <div class=\"heading-elements\">\r\n                        <ul class=\"icons-list\">\r\n                            <li><a data-action=\"collapse\"></a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Item name</th>\r\n                                <th>Qty</th>\r\n                                <th>UOM</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr v-for=\"(row, i) in receive_items\" :key=\"i\">\r\n                                <td v-if=\"row.actual_qty_out != row.qty_scanned && row.actual_qty_out != 0\"> {{row.description }} </td>\r\n                                <td v-if=\"row.actual_qty_out != row.qty_scanned && row.actual_qty_out != 0\"> {{row.actual_qty_out - row.qty_scanned}} </td>\r\n                                <td v-if=\"row.actual_qty_out != row.qty_scanned && row.actual_qty_out != 0\"> {{row.uom }} </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { msgError, apiUrl, msgSuccess, tokenApi, getSessionCurrentUrl} from './../../../assets/custom/custom.js'\r\n\r\nexport default {\r\n    data(){\r\n        return {\r\n            file: '',\r\n            p_checked_by: '',\r\n            p_delivered_by: '',\r\n            p_requested_by: '',\r\n            p_delivery_date: '',\r\n            p_date_created: '',\r\n            p_br_code_out: '',\r\n            p_br_code_in: '',\r\n            p_remarks: '',\r\n            p_qty: 1,\r\n            p_barcode: '',\r\n            p_transfer_no: this.$route.query.transfer_id,\r\n            total_sku: 0,\r\n            total_qty_receive: 0,\r\n            total_qty_ordered: 0,\r\n            total_qty_scanned: 0,\r\n            total_sku_remaining: 0,\r\n            total_remaining_item: 0,\r\n            loading_po: false,\r\n            loading_barcode: false,\r\n            temporary_items: [],\r\n            loading_receive_details: false,\r\n            btn_post: true,\r\n            loading_post: false,\r\n            deviceScan: false,\r\n            list_receive_transfer_details: [],\r\n            list_receive_transfer_details_temp: [],\r\n            receive_items: [],\r\n            last_item_scanned: []\r\n        }\r\n    },\r\n    async mounted(){\r\n      await this.getPlatform()\r\n      await this.fetch_receive_transfer_details()\r\n      await this.fetch_temporary_items(this.p_transfer_no)\r\n      getSessionCurrentUrl(this, 'TransferReceive')\r\n    },\r\n    methods:{\r\n        async openscan(){\r\n            window.qsprint.openscan()\r\n        },\r\n        async fetch_barcode() {\r\n            this.loading_barcode = true //activate loading\r\n            try {\r\n                let data  = {\r\n                    p_barcode: $('#item_barcode').val(),\r\n                    p_qty: this.p_qty,\r\n                    p_transfer_no: this.p_transfer_no\r\n                }\r\n                await axios.post(apiUrl('purchaser/receive_po/transfer/receive/fetch_barcode'), data, tokenApi())\r\n                await this.fetch_temporary_items(this.p_transfer_no)\r\n            } catch (error) {\r\n                await this.handdleError(error)\r\n            }\r\n            this.p_barcode = \"\"\r\n            this.p_qty = 1\r\n            this.loading_barcode = false //deactivate loading\r\n        },\r\n        async fetch_temporary_items(transfer_id) {\r\n            try {\r\n                let query  = {\r\n                    params: {\r\n                        p_transfer_no: transfer_id\r\n                    },\r\n                    headers: tokenApi('token', 'header')\r\n                }\r\n                let result = await axios.get(apiUrl('purchaser/receive_po/transfer/receive/fetch_temporary_items'), query)\r\n                let data   = result.data\r\n                this.btn_post       = (data.temporary_items.length == 0) ? true : false\r\n                this.receive_items = data.receive_items\r\n                this.temporary_items= data.temporary_items\r\n    \r\n                this.total_sku           = data.total_sku\r\n                this.total_qty_receive   = data.total_qty_receive\r\n                this.total_qty_ordered   = data.total_qty_ordered\r\n                this.total_qty_scanned   = data.total_qty_scanned\r\n                this.total_sku_remaining = data.receive_items.length - data.total_all_sku\r\n                this.total_remaining_item= data.total_qty_ordered - data.total_qty_scanned\r\n                this.last_item_scanned = data.last_item_scanned\r\n            } catch (error) {\r\n                await this.handdleError(error)\r\n            }\r\n        },\r\n        async delete_items(temp_receiving_id, id) {\r\n            try {\r\n                let confirm = window.confirm('Confirm delete');\r\n                if(confirm) {\r\n                    let data = {\r\n                        p_temp_id: temp_receiving_id,\r\n                        p_transfer_no: this.p_transfer_no, \r\n                        p_id: id\r\n                    }\r\n                    await axios.post(apiUrl('purchaser/receive_po/transfer/receive/delete_items'), data, tokenApi())\r\n                    await this.fetch_temporary_items(this.p_transfer_no)\r\n                    msgSuccess(200, \"Successfully deleted items\")\r\n                }\r\n            } catch (error) {\r\n                this.handdleError(error)\r\n            }\r\n            \r\n        },\r\n        async fetch_receive_transfer_details(){\r\n           this.loading_receive_details = true //activate loading\r\n            try {\r\n                let query   = {\r\n                    params: {\r\n                        p_transfer_no: this.p_transfer_no\r\n                    },\r\n                    headers: tokenApi('token', 'header')\r\n                }\r\n                let result  = await axios.get(apiUrl('purchaser/receive_po/transfer/receive/fetch_receive_transfer_details'), query)\r\n                let data    = result.data\r\n                this.p_requested_by   = data.transfer.requested_by\r\n                this.p_delivery_date  = data.transfer.delivery_date\r\n                this.p_date_created   = data.transfer.date_created\r\n                this.p_br_code_out    = data.transfer.br_code_out\r\n                this.p_br_code_in     = data.transfer.br_code_in\r\n            } catch (error) {\r\n                await this.handdleError(error)\r\n            }\r\n            this.loading_receive_details = false //deactivate loading\r\n        },\r\n        async post_receiving() {\r\n            try {\r\n                let formData = new FormData()\r\n                // if (this.file == \"\") {\r\n                //     return msgError(401, \"Invoice file is required\")\r\n                // }\r\n                this.btn_post = true\r\n                this.loading_post = true\r\n                 for (let i = 0; i < this.file.length; i++) {\r\n                    let file = this.file[i]\r\n                    formData.append('file[' + i + ']', file);\r\n                }\r\n                formData.append('p_remarks', this.p_remarks)\r\n                formData.append('p_transfer_no', this.p_transfer_no)\r\n                await axios.post(apiUrl('purchaser/receive_po/transfer/receive/post_receiving'), formData, tokenApi())\r\n                this.$session.flash.set('p_message', 'OK')\r\n                this.$router.push({ name: 'TransferReceive' })\r\n                await this.refresh()\r\n\r\n            } catch (error) {\r\n                this.handdleError(error)\r\n            }\r\n            this.btn_post = false\r\n            this.loading_post = false\r\n        },\r\n        async handleFileUpload() {\r\n            this.file = this.$refs.file.files;\r\n        },\r\n        async refresh() {\r\n            let input = this.$refs.file;\r\n            input.type = 'text';\r\n            input.type = 'file';\r\n            this.file          = ''\r\n            this.p_requested_by = ''\r\n            this.p_delivery_date = ''\r\n            this.p_date_created = ''\r\n            this.p_br_code_out = ''\r\n            this.p_br_code_in = ''\r\n            this.p_qty = 1\r\n            this.p_barcode = ''\r\n            this.p_transfer_no = this.$route.query.transfer_id\r\n            this.total_sku = 0\r\n            this.total_qty_receive = 0\r\n            this.total_qty_ordered = 0\r\n            this.total_qty_scanned = 0\r\n            this.total_sku_remaining = 0\r\n            this.total_remaining_item = 0\r\n            this.loading_po = false\r\n            this.loading_barcode = false\r\n            this.temporary_items = []\r\n            this.loading_receive_details = false\r\n            this.list_receive_transfer_details = []\r\n            this.list_receive_transfer_details_temp = []\r\n            this.receive_items = []\r\n        },\r\n        async handdleError(error=null){\r\n            if (error != null) {\r\n                const response = JSON.parse(JSON.stringify(error))\r\n                const status = response.response.status.toString()\r\n                const message = (response.response.data.error === undefined) ? response.response.data.message : response.response.data.error.message\r\n                msgError(status, message)\r\n                return true\r\n            }\r\n                msgError(401, \"Something Wrong\")\r\n        },\r\n        async  getPlatform() {\r\n          let platform = [\"Win32\", \"Android\", \"iOS\", \"Linux armv8l\"];\r\n          for (let i = 0; i < platform.length; i++) {\r\n              if (navigator.platform.indexOf(platform[i]) >- 1) {\r\n                if(platform[i] == 'Linux armv8l') {\r\n                  this.deviceScan = true\r\n                }\r\n              }\r\n          }\r\n        }\r\n\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\nth,td {\r\n  padding: 10px !important;\r\n  font-size: 10px;\r\n  text-align: center !important;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/transfer/receive"}]}