{"remainingRequest":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\thread-loader\\dist\\cjs.js!C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\babel-loader\\lib\\index.js!C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\src\\store.js","dependencies":[{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\src\\store.js","mtime":1559280381339},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _asyncToGenerator from \"C:\\\\node-projects\\\\Receiving\\\\franchisee\\\\api_vue_receiving\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n//load store to main.js\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    branch_name: '',\n    message: 'orayt',\n    count: 0,\n    receiving_no: ''\n  },\n  mutations: {\n    //synchronus\n    increment(state, payload) {\n      state.count += payload;\n    },\n\n    branch_name(state, payload) {\n      return _asyncToGenerator(function* () {\n        state.branch_name = yield payload;\n      })();\n    },\n\n    receiving_no(state, payload) {\n      return _asyncToGenerator(function* () {\n        state.receiving_no = yield payload;\n      })();\n    }\n\n  },\n  actions: {\n    //async chronus\n    increment(state, payload) {\n      state.commit('increment', payload);\n    }\n\n  },\n  getters: {\n    message(state) {\n      return state.message.toUpperCase();\n    },\n\n    branch_name(state) {\n      return state.branch_name.toUpperCase();\n    },\n\n    counter(state) {\n      return state.count;\n    },\n\n    receiving_no(state) {\n      return state.receiving_no;\n    }\n\n  }\n});",{"version":3,"sources":["C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\src\\store.js"],"names":["Vue","Vuex","use","Store","state","branch_name","message","count","receiving_no","mutations","increment","payload","actions","commit","getters","toUpperCase","counter"],"mappings":";AAAA;AAEA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AACA,eAAe,IAAIA,IAAI,CAACE,KAAT,CAAe;AAC1BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,WAAW,EAAE,EADV;AAEHC,IAAAA,OAAO,EAAE,OAFN;AAGHC,IAAAA,KAAK,EAAE,CAHJ;AAIHC,IAAAA,YAAY,EAAE;AAJX,GADmB;AAO1BC,EAAAA,SAAS,EAAE;AAAE;AACTC,IAAAA,SAAS,CAACN,KAAD,EAAQO,OAAR,EAAiB;AACtBP,MAAAA,KAAK,CAACG,KAAN,IAAeI,OAAf;AACH,KAHM;;AAIDN,IAAAA,WAAN,CAAkBD,KAAlB,EAAyBO,OAAzB,EAAkC;AAAA;AAC9BP,QAAAA,KAAK,CAACC,WAAN,SAA0BM,OAA1B;AAD8B;AAEjC,KANM;;AAODH,IAAAA,YAAN,CAAmBJ,KAAnB,EAA0BO,OAA1B,EAAkC;AAAA;AAC9BP,QAAAA,KAAK,CAACI,YAAN,SAA2BG,OAA3B;AAD8B;AAEjC;;AATM,GAPe;AAkB1BC,EAAAA,OAAO,EAAE;AAAE;AACPF,IAAAA,SAAS,CAACN,KAAD,EAAQO,OAAR,EAAiB;AACtBP,MAAAA,KAAK,CAACS,MAAN,CAAa,WAAb,EAA0BF,OAA1B;AACH;;AAHI,GAlBiB;AAuB1BG,EAAAA,OAAO,EAAE;AACLR,IAAAA,OAAO,CAACF,KAAD,EAAQ;AACX,aAAOA,KAAK,CAACE,OAAN,CAAcS,WAAd,EAAP;AACH,KAHI;;AAILV,IAAAA,WAAW,CAACD,KAAD,EAAQ;AACf,aAAOA,KAAK,CAACC,WAAN,CAAkBU,WAAlB,EAAP;AACH,KANI;;AAOLC,IAAAA,OAAO,CAACZ,KAAD,EAAQ;AACX,aAAOA,KAAK,CAACG,KAAb;AACH,KATI;;AAULC,IAAAA,YAAY,CAACJ,KAAD,EAAQ;AAChB,aAAOA,KAAK,CAACI,YAAb;AACH;;AAZI;AAvBiB,CAAf,CAAf","sourcesContent":["//load store to main.js\r\n\r\nimport Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\nexport default new Vuex.Store({\r\n    state: {\r\n        branch_name: '',\r\n        message: 'orayt',\r\n        count: 0,\r\n        receiving_no: '',\r\n    },\r\n    mutations: { //synchronus\r\n        increment(state, payload) {\r\n            state.count += payload\r\n        },\r\n        async branch_name(state, payload) {\r\n            state.branch_name = await payload\r\n        },\r\n        async receiving_no(state, payload){\r\n            state.receiving_no = await payload\r\n        }\r\n    },\r\n    actions: { //async chronus\r\n        increment(state, payload) {\r\n            state.commit('increment', payload)\r\n        }\r\n    },\r\n    getters: {\r\n        message(state) {\r\n            return state.message.toUpperCase()\r\n        },\r\n        branch_name(state) {\r\n            return state.branch_name.toUpperCase()\r\n        },\r\n        counter(state) {\r\n            return state.count\r\n        },\r\n        receiving_no(state) {\r\n            return state.receiving_no\r\n        }\r\n    }\r\n})"]}]}