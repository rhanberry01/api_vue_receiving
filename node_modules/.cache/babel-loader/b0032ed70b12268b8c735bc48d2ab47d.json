{"remainingRequest":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\thread-loader\\dist\\cjs.js!C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\babel-loader\\lib\\index.js!C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\src\\components\\transfer\\dispatch_auto_save\\DispatchAutoSave.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\src\\components\\transfer\\dispatch_auto_save\\DispatchAutoSave.vue","mtime":1628746453874},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"C:\\\\node-projects\\\\Receiving\\\\franchisee\\\\api_vue_receiving\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _JSON$stringify from \"C:\\\\node-projects\\\\Receiving\\\\franchisee\\\\api_vue_receiving\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _getIterator from \"C:\\\\node-projects\\\\Receiving\\\\franchisee\\\\api_vue_receiving\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/get-iterator\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\node-projects\\\\Receiving\\\\franchisee\\\\api_vue_receiving\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport { msgError, apiUrl, msgSuccess, tokenApi, getSessionCurrentUrl } from './../../../assets/custom/custom.js';\nexport default {\n  data: function data() {\n    return {\n      p_checked_by: '',\n      p_delivered_by: '',\n      p_requested_by: '',\n      p_delivery_date: '',\n      p_date_created: '',\n      p_br_code_out: '',\n      p_br_code_in: '',\n      p_qty: 1,\n      p_barcode: '',\n      p_transfer_no: this.$route.query.transfer_id,\n      total_sku: 0,\n      total_qty_receive: 0,\n      total_qty_ordered: 0,\n      total_qty_scanned: 0,\n      total_sku_remaining: 0,\n      total_remaining_item: 0,\n      loading_po: false,\n      loading_barcode: false,\n      btn_post: true,\n      loading_post: false,\n      deviceScan: false,\n      temporary_items: [],\n      loading_dispatch_details: false,\n      list_dispatch_transfer_details: [],\n      list_dispatch_transfer_details_temp: [],\n      dispatch_items: [],\n      last_item_scanned: []\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.getPlatform();\n\n            case 2:\n              _context.next = 4;\n              return this.fetch_dispatch_transfer_details();\n\n            case 4:\n              _context.next = 6;\n              return this.fetch_temporary_items(this.p_transfer_no);\n\n            case 6:\n              getSessionCurrentUrl(this, 'TransferDispatch');\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    openscan: function () {\n      var _openscan = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                window.qsprint.openscan();\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function openscan() {\n        return _openscan.apply(this, arguments);\n      }\n\n      return openscan;\n    }(),\n    fetch_barcode: function () {\n      var _fetch_barcode = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(barcode, qty) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                data = {\n                  p_barcode: barcode,\n                  p_qty: qty,\n                  p_transfer_no: this.p_transfer_no // console.log()\n\n                };\n                _context3.next = 4;\n                return axios.post(apiUrl('purchaser/receive_po/transfer/dispatch/fetch_barcode'), data, tokenApi());\n\n              case 4:\n                _context3.next = 10;\n                break;\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3[\"catch\"](0);\n                _context3.next = 10;\n                return this.handdleError(_context3.t0);\n\n              case 10:\n                this.p_barcode = \"\";\n                this.p_qty = 1; // this.loading_barcode = false //deactivate loading\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 6]]);\n      }));\n\n      function fetch_barcode(_x, _x2) {\n        return _fetch_barcode.apply(this, arguments);\n      }\n\n      return fetch_barcode;\n    }(),\n    fetch_temporary_items: function () {\n      var _fetch_temporary_items = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(transfer_id) {\n        var _this = this;\n\n        var query, result, data, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _loop, _iterator, _step;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.loading_barcode = true; //activate loading\n\n                this.btn_post = true;\n                _context5.prev = 2;\n                query = {\n                  params: {\n                    p_transfer_no: transfer_id\n                  },\n                  headers: tokenApi('token', 'header')\n                };\n                _context5.next = 6;\n                return axios.get(apiUrl('purchaser/receive_po/transfer/dispatch/fetch_temporary_items'), query);\n\n              case 6:\n                result = _context5.sent;\n                data = result.data;\n                this.btn_post = data.temporary_items.length == 0 ? true : false;\n                this.dispatch_items = data.dispatch_items;\n                this.temporary_items = data.temporary_items;\n                this.total_sku = data.total_sku;\n                this.total_qty_receive = data.total_qty_receive;\n                this.total_qty_ordered = data.total_qty_ordered;\n                this.total_qty_scanned = data.total_qty_scanned;\n                this.total_sku_remaining = data.dispatch_items.length - data.total_all_sku;\n                this.total_remaining_item = data.total_qty_ordered - data.total_qty_scanned;\n                this.last_item_scanned = data.last_item_scanned;\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context5.prev = 21;\n                _loop =\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _loop() {\n                  var row, index;\n                  return regeneratorRuntime.wrap(function _loop$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          row = _step.value;\n                          index = data.temporary_items.findIndex(function (temp) {\n                            return row.barcode === temp.barcode;\n                          });\n\n                          if (!(index === -1)) {\n                            _context4.next = 5;\n                            break;\n                          }\n\n                          _context4.next = 5;\n                          return _this.fetch_barcode(row.barcode, row.qty_out);\n\n                        case 5:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, _loop);\n                });\n                _iterator = _getIterator(data.dispatch_items);\n\n              case 24:\n                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                  _context5.next = 29;\n                  break;\n                }\n\n                return _context5.delegateYield(_loop(), \"t0\", 26);\n\n              case 26:\n                _iteratorNormalCompletion = true;\n                _context5.next = 24;\n                break;\n\n              case 29:\n                _context5.next = 35;\n                break;\n\n              case 31:\n                _context5.prev = 31;\n                _context5.t1 = _context5[\"catch\"](21);\n                _didIteratorError = true;\n                _iteratorError = _context5.t1;\n\n              case 35:\n                _context5.prev = 35;\n                _context5.prev = 36;\n\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n\n              case 38:\n                _context5.prev = 38;\n\n                if (!_didIteratorError) {\n                  _context5.next = 41;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 41:\n                return _context5.finish(38);\n\n              case 42:\n                return _context5.finish(35);\n\n              case 43:\n                _context5.next = 45;\n                return this.fetch_temporary_items_2(this.p_transfer_no);\n\n              case 45:\n                this.loading_barcode = false; //activate loading\n\n                this.btn_post = false;\n                _context5.next = 53;\n                break;\n\n              case 49:\n                _context5.prev = 49;\n                _context5.t2 = _context5[\"catch\"](2);\n                _context5.next = 53;\n                return this.handdleError(_context5.t2);\n\n              case 53:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee4, this, [[2, 49], [21, 31, 35, 43], [36,, 38, 42]]);\n      }));\n\n      function fetch_temporary_items(_x3) {\n        return _fetch_temporary_items.apply(this, arguments);\n      }\n\n      return fetch_temporary_items;\n    }(),\n    fetch_temporary_items_2: function () {\n      var _fetch_temporary_items_ = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(transfer_id) {\n        var query, result, data;\n        return regeneratorRuntime.wrap(function _callee5$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this.loading_barcode = true; //activate loading\n\n                _context6.prev = 1;\n                query = {\n                  params: {\n                    p_transfer_no: transfer_id\n                  },\n                  headers: tokenApi('token', 'header')\n                };\n                _context6.next = 5;\n                return axios.get(apiUrl('purchaser/receive_po/transfer/dispatch/fetch_temporary_items'), query);\n\n              case 5:\n                result = _context6.sent;\n                data = result.data;\n                this.btn_post = data.temporary_items.length == 0 ? true : false;\n                this.dispatch_items = data.dispatch_items;\n                this.temporary_items = data.temporary_items;\n                this.total_sku = data.total_sku;\n                this.total_qty_receive = data.total_qty_receive;\n                this.total_qty_ordered = data.total_qty_ordered;\n                this.total_qty_scanned = data.total_qty_scanned;\n                this.total_sku_remaining = data.dispatch_items.length - data.total_all_sku;\n                this.total_remaining_item = data.total_qty_ordered - data.total_qty_scanned;\n                this.last_item_scanned = data.last_item_scanned;\n\n                if (!(data.temporary_items.length === 0)) {\n                  _context6.next = 19;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", window.location.href = '/receive/transfer/dispatch');\n\n              case 19:\n                this.loading_barcode = false; //activate loading\n\n                _context6.next = 26;\n                break;\n\n              case 22:\n                _context6.prev = 22;\n                _context6.t0 = _context6[\"catch\"](1);\n                _context6.next = 26;\n                return this.handdleError(_context6.t0);\n\n              case 26:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee5, this, [[1, 22]]);\n      }));\n\n      function fetch_temporary_items_2(_x4) {\n        return _fetch_temporary_items_.apply(this, arguments);\n      }\n\n      return fetch_temporary_items_2;\n    }(),\n    delete_items: function () {\n      var _delete_items = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(temp_receiving_id, id) {\n        var confirm, data, result, res;\n        return regeneratorRuntime.wrap(function _callee6$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                confirm = window.confirm('Confirm delete');\n\n                if (!confirm) {\n                  _context7.next = 14;\n                  break;\n                }\n\n                data = {\n                  p_temp_id: temp_receiving_id,\n                  p_transfer_no: this.p_transfer_no,\n                  p_id: id\n                };\n                _context7.next = 6;\n                return axios.post(apiUrl('purchaser/receive_po/transfer/dispatch/delete_items'), data, tokenApi());\n\n              case 6:\n                result = _context7.sent;\n                res = result.data;\n                _context7.next = 10;\n                return this.fetch_temporary_items_2(this.p_transfer_no);\n\n              case 10:\n                msgSuccess(200, \"Successfully deleted items\");\n\n                if (!(res.count_items == 1)) {\n                  _context7.next = 14;\n                  break;\n                }\n\n                _context7.next = 14;\n                return this.refresh();\n\n              case 14:\n                _context7.next = 19;\n                break;\n\n              case 16:\n                _context7.prev = 16;\n                _context7.t0 = _context7[\"catch\"](0);\n                this.handdleError(_context7.t0);\n\n              case 19:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee6, this, [[0, 16]]);\n      }));\n\n      function delete_items(_x5, _x6) {\n        return _delete_items.apply(this, arguments);\n      }\n\n      return delete_items;\n    }(),\n    fetch_dispatch_transfer_details: function () {\n      var _fetch_dispatch_transfer_details = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7() {\n        var query, result, data;\n        return regeneratorRuntime.wrap(function _callee7$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                this.loading_dispatch_details = true; //activate loading\n\n                _context8.prev = 1;\n                query = {\n                  params: {\n                    p_transfer_no: this.p_transfer_no\n                  },\n                  headers: tokenApi('token', 'header')\n                };\n                _context8.next = 5;\n                return axios.get(apiUrl('purchaser/receive_po/transfer/dispatch/fetch_dispatch_transfer_details'), query);\n\n              case 5:\n                result = _context8.sent;\n                data = result.data;\n                this.p_requested_by = data.transfer.requested_by;\n                this.p_delivery_date = data.transfer.delivery_date;\n                this.p_date_created = data.transfer.date_created;\n                this.p_br_code_out = data.transfer.br_code_out;\n                this.p_br_code_in = data.transfer.br_code_in;\n                _context8.next = 18;\n                break;\n\n              case 14:\n                _context8.prev = 14;\n                _context8.t0 = _context8[\"catch\"](1);\n                _context8.next = 18;\n                return this.handdleError(_context8.t0);\n\n              case 18:\n                this.loading_dispatch_details = false; //deactivate loading\n\n              case 19:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee7, this, [[1, 14]]);\n      }));\n\n      function fetch_dispatch_transfer_details() {\n        return _fetch_dispatch_transfer_details.apply(this, arguments);\n      }\n\n      return fetch_dispatch_transfer_details;\n    }(),\n    post_receiving: function () {\n      var _post_receiving = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8() {\n        var data;\n        return regeneratorRuntime.wrap(function _callee8$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                this.btn_post = true;\n                this.loading_post = true;\n                _context9.prev = 2;\n                data = {\n                  p_checked_by: this.p_checked_by,\n                  p_delivered_by: this.p_delivered_by,\n                  p_transfer_no: this.p_transfer_no\n                };\n                _context9.next = 6;\n                return axios.post(apiUrl('purchaser/receive_po/transfer/dispatch/post_receiving'), data, tokenApi());\n\n              case 6:\n                this.$session.flash.set('p_message', 'OK');\n                this.$router.push({\n                  name: 'TransferDispatch'\n                });\n                _context9.next = 10;\n                return this.refresh();\n\n              case 10:\n                _context9.next = 15;\n                break;\n\n              case 12:\n                _context9.prev = 12;\n                _context9.t0 = _context9[\"catch\"](2);\n                this.handdleError(_context9.t0);\n\n              case 15:\n                this.btn_post = false;\n                this.loading_post = false;\n\n              case 17:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee8, this, [[2, 12]]);\n      }));\n\n      function post_receiving() {\n        return _post_receiving.apply(this, arguments);\n      }\n\n      return post_receiving;\n    }(),\n    refresh: function () {\n      var _refresh = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee9() {\n        return regeneratorRuntime.wrap(function _callee9$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                this.p_requested_by = '';\n                this.p_delivery_date = '';\n                this.p_date_created = '';\n                this.p_br_code_out = '';\n                this.p_br_code_in = '';\n                this.p_qty = 1;\n                this.p_barcode = '';\n                this.p_transfer_no = this.$route.query.transfer_id;\n                this.total_sku = 0;\n                this.total_qty_receive = 0;\n                this.total_qty_ordered = 0;\n                this.total_qty_scanned = 0;\n                this.total_sku_remaining = 0;\n                this.total_remaining_item = 0;\n                this.loading_po = false;\n                this.loading_barcode = false;\n                this.temporary_items = [];\n                this.loading_dispatch_details = false;\n                this.list_dispatch_transfer_details = [];\n                this.list_dispatch_transfer_details_temp = [];\n                this.dispatch_items = [];\n\n              case 21:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function refresh() {\n        return _refresh.apply(this, arguments);\n      }\n\n      return refresh;\n    }(),\n    handdleError: function () {\n      var _handdleError = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee10() {\n        var error,\n            response,\n            status,\n            message,\n            _args11 = arguments;\n        return regeneratorRuntime.wrap(function _callee10$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                error = _args11.length > 0 && _args11[0] !== undefined ? _args11[0] : null;\n\n                if (!(error != null)) {\n                  _context11.next = 7;\n                  break;\n                }\n\n                response = JSON.parse(_JSON$stringify(error));\n                status = response.response.status.toString();\n                message = response.response.data.error === undefined ? response.response.data.message : response.response.data.error.message;\n                msgError(status, message);\n                return _context11.abrupt(\"return\", true);\n\n              case 7:\n                msgError(401, \"Something Wrong\");\n\n              case 8:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee10);\n      }));\n\n      function handdleError() {\n        return _handdleError.apply(this, arguments);\n      }\n\n      return handdleError;\n    }(),\n    getPlatform: function () {\n      var _getPlatform = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee11() {\n        var platform, i;\n        return regeneratorRuntime.wrap(function _callee11$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                platform = [\"Win32\", \"Android\", \"iOS\", \"Linux armv8l\"];\n\n                for (i = 0; i < platform.length; i++) {\n                  if (navigator.platform.indexOf(platform[i]) > -1) {\n                    if (platform[i] == 'Linux armv8l') {\n                      this.deviceScan = true;\n                    }\n                  }\n                }\n\n              case 2:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function getPlatform() {\n        return _getPlatform.apply(this, arguments);\n      }\n\n      return getPlatform;\n    }(),\n    updateQty: function () {\n      var _updateQty = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee12(item) {\n        var res;\n        return regeneratorRuntime.wrap(function _callee12$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.prev = 0;\n                _context13.next = 3;\n                return axios.post(apiUrl('purchaser/receive_po/transfer/dispatch/update_qty'), _objectSpread({}, item, {\n                  transfer_id: this.p_transfer_no\n                }), tokenApi());\n\n              case 3:\n                res = _context13.sent;\n                _context13.next = 9;\n                break;\n\n              case 6:\n                _context13.prev = 6;\n                _context13.t0 = _context13[\"catch\"](0);\n                this.handdleError(_context13.t0);\n\n              case 9:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee12, this, [[0, 6]]);\n      }));\n\n      function updateQty(_x7) {\n        return _updateQty.apply(this, arguments);\n      }\n\n      return updateQty;\n    }()\n  }\n};",{"version":3,"sources":["DispatchAutoSave.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"panel-body\">\r\n       \r\n        <!-- Main content -->\r\n        <div class=\"content-wrapper col-sm-12\" >\r\n            \r\n            <div class=\"panel panel-flat\">\r\n                <div class=\"panel-heading\">\r\n                    <p>\r\n                         <a style=\"border-radius:0px;\">&nbsp;&nbsp;<i class=\"icon icon-undo\"></i><router-link to=\"/receive/transfer/dispatch\"> CLICK ME TO BACK</router-link> </a>\r\n                    </p>\r\n                    <p class=\"panel-title\">ITEMS FOR TRANSFER # {{ p_transfer_no }} </p>\r\n                    <div class=\"heading-elements\">\r\n                        <ul class=\"icons-list\">\r\n                            <li><a data-action=\"collapse\"></a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table table-bordered\">\r\n                        <thead >\r\n                            <tr v-show=\"loading_dispatch_details\">\r\n                                <th colspan=\"2\"  style=\"text-align:center\">\r\n                                    <p>\r\n                                        <i class=\"icon-spinner4 spinner position-left\"></i> PLEASE WAIT ..\r\n                                    </p>\r\n                                </th>\r\n                            </tr>\r\n                            <tr v-show=\"!loading_dispatch_details\">\r\n                                <th style=\"text-align:center;font-size:12px;\">\r\n                                    TRANSFER #: {{ p_transfer_no }}<br>\r\n                                    OUT FROM BRANCH DATE: {{ p_delivery_date | date  }}<br>\r\n                                    FROM BRANCH:  {{ p_br_code_out }}\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th style=\"text-align:center;font-size:12px;\">\r\n                                    REQUESTED BY: {{ p_requested_by | uppercase }}<br>\r\n                                    DATE CREATED: {{ p_date_created | date }}<br>\r\n                                    TO BRANCH: {{ p_br_code_in }}\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n            <!-- Main content -->\r\n        <div class=\"content-wrapper  col-sm-12\" >\r\n            <div class=\"panel panel-flat\">\r\n                <div class=\"panel-heading\">\r\n                    <p class=\"panel-title\">Item Scanned</p>\r\n                </div>\r\n\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Item name</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr v-for=\"(row, i) in temporary_items\" :key=\"i\">\r\n                                <td> {{row.item_name }} <br>  \r\n                                QTY -> <input type=\"text\" v-model=\"row.qty\" v-on:blur=\"updateQty(row)\" /> <br>\r\n                                UOM -> {{row.uom }} </td>\r\n                                <td> \r\n                                    <button class=\"btn btn-danger btn-sm\" v-on:click=\"delete_items(row.temp_receiving_id, row.id)\"><i class=\"icon-cancel-circle2\"></i></button>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <p v-show=\"loading_barcode\" class=\"pull-center\" >\r\n                                        <i class=\"icon-spinner4 spinner position-left\"></i> PLEASE WAIT WHILE IMPORTING GULAY ITEM..\r\n                                    </p>\r\n                                    <!-- <button v-on:click=\"openscan()\" v-show=\"deviceScan\" class=\"btn btn-info btn-xs pull-left\" style=\"border-radius:0px;\">CLICK TO SCAN BARCODE</button>\r\n                                    <input class=\"form-control\" placeholder=\"Enter Barcode\"  id=\"item_barcode\" v-model=\"p_barcode\" v-on:keyup.13=\"fetch_barcode\"> -->\r\n                                </td>\r\n                                <td><input  style=\"text-align:left;\" class=\"form-control\"  v-model=\"p_qty\"></td>\r\n                            <tr>\r\n                            <tr>\r\n                                <td style=\"text-align:center !important\">SKU SCANNED: {{ total_sku }}</td>\r\n                                <td style=\"text-align:center !important\">SKU REMAINING:  {{ total_sku_remaining }}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style=\"text-align:center !important\">TOTAL QTY SCANNED:  {{ total_qty_scanned }}</td>\r\n                                <td style=\"text-align:center !important\">REMAINING ITEMS:  {{ total_remaining_item }}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style=\"text-align:center !important\">TOTAL PO QTY POSTED:  {{ total_qty_receive }}</td>\r\n                                <td style=\"text-align:center !important\">TOTAL PO QTY: {{ total_qty_ordered }}</td>\r\n                            </tr>\r\n                            <tr>\r\n                            <td colspan=\"4\">\r\n                                    <input class=\"form-control\"  v-model=\"p_checked_by\" placeholder=\"Checked By\">\r\n                                </td>\r\n                            <tr>\r\n                                <td colspan=\"4\"> <input class=\"form-control\"  v-model=\"p_delivered_by\" placeholder=\"Delivered By\t\"></td>\r\n                            <tr>\r\n                            <tr>\r\n                                <td colspan=\"4\">\r\n                                    <button type=\"button\" :disabled=\"btn_post\" class=\"btn btn-sm btn-primary col-xs-12\" v-on:click=\"post_receiving()\">\r\n                                        <div v-if=\"loading_post\">\r\n                                            <i class=\"icon-spinner4 spinner position-left\"></i> PLEASE WAIT ..\r\n                                        </div>\r\n                                        <div v-if=\"!loading_post\">\r\n                                            <i class=\"icon-checkmark\"></i> POST\r\n                                        </div>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- End Main content -->\r\n        <!-- last item  -->\r\n        <div class=\"content-wrapper col-sm-12\" >\r\n            <div class=\"panel panel-flat\">\r\n                <div class=\"panel-heading\">\r\n                    <p class=\"panel-title\">LAST ITEM SCANNED</p>\r\n                    <div class=\"heading-elements\">\r\n                        <ul class=\"icons-list\">\r\n                            <li><a data-action=\"collapse\"></a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ITEM NAME</th>\r\n                                <th>UOM</th>\r\n                                <th>REMAINING QTY</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr v-for=\"(row, i) in last_item_scanned\" :key=\"i\">\r\n                                <td> {{row.description }} </td>\r\n                                <td> {{row.unit_id }} </td>\r\n                                <td> {{row.remaining }} </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- last item  -->\r\n\r\n        <!-- Main content -->\r\n        <div class=\"content-wrapper col-sm-12\" >\r\n            <div class=\"panel panel-flat\">\r\n                <div class=\"panel-heading\">\r\n                    <p class=\"panel-title\">ITEMS FOR TRANSFER</p>\r\n                    <div class=\"heading-elements\">\r\n                        <ul class=\"icons-list\">\r\n                            <li><a data-action=\"collapse\"></a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Item name</th>\r\n                                <th>Qty</th>\r\n                                <th>UOM</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr v-for=\"(row, i) in dispatch_items\" :key=\"i\">\r\n                                <td v-if=\"row.qty_out != row.qty_scanned\"> {{row.description }} </td>\r\n                                <td v-if=\"row.qty_out != row.qty_scanned\"> {{row.qty_out - row.qty_scanned }} </td>\r\n                                <td v-if=\"row.qty_out != row.qty_scanned\"> {{row.unit_id }} </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { msgError, apiUrl, msgSuccess, tokenApi, getSessionCurrentUrl } from './../../../assets/custom/custom.js'\r\n\r\nexport default {\r\n    data(){\r\n        return {\r\n            p_checked_by: '',\r\n            p_delivered_by: '',\r\n            p_requested_by: '',\r\n            p_delivery_date: '',\r\n            p_date_created: '',\r\n            p_br_code_out: '',\r\n            p_br_code_in: '',\r\n            p_qty: 1,\r\n            p_barcode: '',\r\n            p_transfer_no: this.$route.query.transfer_id,\r\n            total_sku: 0,\r\n            total_qty_receive: 0,\r\n            total_qty_ordered: 0,\r\n            total_qty_scanned: 0,\r\n            total_sku_remaining: 0,\r\n            total_remaining_item: 0,\r\n            loading_po: false,\r\n            loading_barcode: false,\r\n            btn_post: true,\r\n            loading_post: false,\r\n            deviceScan: false,\r\n            temporary_items: [],\r\n            loading_dispatch_details: false,\r\n            list_dispatch_transfer_details: [],\r\n            list_dispatch_transfer_details_temp: [],\r\n            dispatch_items: [],\r\n            last_item_scanned: []\r\n        }\r\n    },\r\n    async mounted(){\r\n      await this.getPlatform()\r\n      await this.fetch_dispatch_transfer_details()\r\n      await this.fetch_temporary_items(this.p_transfer_no)\r\n      getSessionCurrentUrl(this, 'TransferDispatch')\r\n    },\r\n    methods:{\r\n        async openscan(){\r\n            window.qsprint.openscan()\r\n        },\r\n        async fetch_barcode(barcode, qty) {\r\n            \r\n            try {\r\n                let data  = {\r\n                    p_barcode: barcode,\r\n                    p_qty: qty,\r\n                    p_transfer_no: this.p_transfer_no\r\n                }\r\n                // console.log()\r\n                await axios.post(apiUrl('purchaser/receive_po/transfer/dispatch/fetch_barcode'), data, tokenApi())\r\n                // await this.fetch_temporary_items(this.p_transfer_no)\r\n            } catch (error) {\r\n                await this.handdleError(error)\r\n            }\r\n            this.p_barcode = \"\"\r\n            this.p_qty = 1\r\n            // this.loading_barcode = false //deactivate loading\r\n        },\r\n        async fetch_temporary_items(transfer_id) {\r\n            this.loading_barcode = true //activate loading\r\n            this.btn_post = true\r\n            try {\r\n                let query  = {\r\n                    params: {\r\n                        p_transfer_no: transfer_id\r\n                    },\r\n                    headers: tokenApi('token', 'header')\r\n                }\r\n                let result = await axios.get(apiUrl('purchaser/receive_po/transfer/dispatch/fetch_temporary_items'), query)\r\n                let data   = result.data\r\n                this.btn_post       = (data.temporary_items.length == 0) ? true : false\r\n                this.dispatch_items = data.dispatch_items\r\n                this.temporary_items= data.temporary_items\r\n\r\n                this.total_sku           = data.total_sku\r\n                this.total_qty_receive   = data.total_qty_receive\r\n                this.total_qty_ordered   = data.total_qty_ordered\r\n                this.total_qty_scanned   = data.total_qty_scanned\r\n                this.total_sku_remaining = data.dispatch_items.length - data.total_all_sku\r\n                this.total_remaining_item= data.total_qty_ordered - data.total_qty_scanned\r\n                this.last_item_scanned = data.last_item_scanned\r\n\r\n                for(const row of data.dispatch_items) {\r\n                  const index = data.temporary_items.findIndex((temp) => row.barcode === temp.barcode)\r\n                  if(index === -1) {\r\n                    await this.fetch_barcode(row.barcode, row.qty_out)\r\n                  }\r\n                }\r\n                \r\n                await this.fetch_temporary_items_2(this.p_transfer_no)\r\n                this.loading_barcode = false //activate loading\r\n                this.btn_post = false\r\n            } catch (error) {\r\n                await this.handdleError(error)\r\n            }\r\n        },\r\n        async fetch_temporary_items_2(transfer_id) {\r\n            this.loading_barcode = true //activate loading\r\n            try {\r\n                let query  = {\r\n                    params: {\r\n                        p_transfer_no: transfer_id\r\n                    },\r\n                    headers: tokenApi('token', 'header')\r\n                }\r\n                let result = await axios.get(apiUrl('purchaser/receive_po/transfer/dispatch/fetch_temporary_items'), query)\r\n                let data   = result.data\r\n                this.btn_post       = (data.temporary_items.length == 0) ? true : false\r\n                this.dispatch_items = data.dispatch_items\r\n                this.temporary_items= data.temporary_items\r\n\r\n                this.total_sku           = data.total_sku\r\n                this.total_qty_receive   = data.total_qty_receive\r\n                this.total_qty_ordered   = data.total_qty_ordered\r\n                this.total_qty_scanned   = data.total_qty_scanned\r\n                this.total_sku_remaining = data.dispatch_items.length - data.total_all_sku\r\n                this.total_remaining_item= data.total_qty_ordered - data.total_qty_scanned\r\n                this.last_item_scanned = data.last_item_scanned\r\n                if(data.temporary_items.length === 0) {\r\n                  return window.location.href = '/receive/transfer/dispatch'\r\n                }\r\n                this.loading_barcode = false //activate loading\r\n            } catch (error) {\r\n                await this.handdleError(error)\r\n            }\r\n        },\r\n        async delete_items(temp_receiving_id, id) {\r\n            try {\r\n                let confirm = window.confirm('Confirm delete');\r\n                if(confirm) {\r\n                    let data = {\r\n                        p_temp_id: temp_receiving_id,\r\n                        p_transfer_no: this.p_transfer_no, \r\n                        p_id: id\r\n                    }\r\n                    let result = await axios.post(apiUrl('purchaser/receive_po/transfer/dispatch/delete_items'), data, tokenApi())\r\n                    let res   = result.data\r\n                    \r\n                    await this.fetch_temporary_items_2(this.p_transfer_no)\r\n                    msgSuccess(200, \"Successfully deleted items\")\r\n                    if (res.count_items == 1) {\r\n                        await this.refresh()\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                this.handdleError(error)\r\n            }\r\n            \r\n        },\r\n        async fetch_dispatch_transfer_details(){\r\n           this.loading_dispatch_details = true //activate loading\r\n            try {\r\n                let query   = {\r\n                    params: {\r\n                        p_transfer_no: this.p_transfer_no\r\n                    },\r\n                    headers: tokenApi('token', 'header')\r\n                }\r\n                let result  = await axios.get(apiUrl('purchaser/receive_po/transfer/dispatch/fetch_dispatch_transfer_details'), query)\r\n                let data    = result.data\r\n                this.p_requested_by   = data.transfer.requested_by\r\n                this.p_delivery_date  = data.transfer.delivery_date\r\n                this.p_date_created   = data.transfer.date_created\r\n                this.p_br_code_out    = data.transfer.br_code_out\r\n                this.p_br_code_in     = data.transfer.br_code_in\r\n            } catch (error) {\r\n                await this.handdleError(error)\r\n            }\r\n            this.loading_dispatch_details = false //deactivate loading\r\n        },\r\n        async post_receiving() {\r\n            this.btn_post = true\r\n            this.loading_post = true\r\n            try {\r\n                let data = {\r\n                    p_checked_by: this.p_checked_by,\r\n                    p_delivered_by: this.p_delivered_by,\r\n                    p_transfer_no: this.p_transfer_no\r\n                }\r\n                \r\n                await axios.post(apiUrl('purchaser/receive_po/transfer/dispatch/post_receiving'), data, tokenApi())\r\n                this.$session.flash.set('p_message', 'OK')\r\n                this.$router.push({ name: 'TransferDispatch' })\r\n                await this.refresh()\r\n\r\n            } catch (error) {\r\n                this.handdleError(error)\r\n            }\r\n            this.btn_post = false\r\n            this.loading_post = false\r\n        },\r\n        async refresh() {\r\n            this.p_requested_by = ''\r\n            this.p_delivery_date = ''\r\n            this.p_date_created = ''\r\n            this.p_br_code_out = ''\r\n            this.p_br_code_in = ''\r\n            this.p_qty = 1\r\n            this.p_barcode = ''\r\n            this.p_transfer_no = this.$route.query.transfer_id\r\n            this.total_sku = 0\r\n            this.total_qty_receive = 0\r\n            this.total_qty_ordered = 0\r\n            this.total_qty_scanned = 0\r\n            this.total_sku_remaining = 0\r\n            this.total_remaining_item = 0\r\n            this.loading_po = false\r\n            this.loading_barcode = false\r\n            this.temporary_items = []\r\n            this.loading_dispatch_details = false\r\n            this.list_dispatch_transfer_details = []\r\n            this.list_dispatch_transfer_details_temp = []\r\n            this.dispatch_items = []\r\n        },\r\n        async handdleError(error=null){\r\n            if (error != null) {\r\n                const response = JSON.parse(JSON.stringify(error))\r\n                const status = response.response.status.toString()\r\n                const message = (response.response.data.error === undefined) ? response.response.data.message : response.response.data.error.message\r\n                msgError(status, message)\r\n                return true\r\n            }\r\n                msgError(401, \"Something Wrong\")\r\n        },\r\n        async  getPlatform() {\r\n          let platform = [\"Win32\", \"Android\", \"iOS\", \"Linux armv8l\"];\r\n          for (let i = 0; i < platform.length; i++) {\r\n              if (navigator.platform.indexOf(platform[i]) >- 1) {\r\n                if(platform[i] == 'Linux armv8l') {\r\n                  this.deviceScan = true\r\n                }\r\n              }\r\n          }\r\n        },\r\n        async updateQty(item) {\r\n          try {\r\n            const res = await axios.post(apiUrl('purchaser/receive_po/transfer/dispatch/update_qty'), {\r\n              ...item,\r\n              transfer_id: this.p_transfer_no\r\n            }, tokenApi())\r\n          } catch (error) {\r\n            this.handdleError(error)\r\n          }\r\n        }\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\nth,td {\r\n  padding: 10px !important;\r\n  font-size: 10px;\r\n  text-align: center !important;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/transfer/dispatch_auto_save"}]}