{"remainingRequest":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\thread-loader\\dist\\cjs.js!C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\babel-loader\\lib\\index.js!C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\src\\components\\receive_open\\variable\\OpenVariable.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\src\\components\\receive_open\\variable\\OpenVariable.vue","mtime":1587480573522},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport _asyncToGenerator from \"C:\\\\node-projects\\\\Receiving\\\\franchisee\\\\api_vue_receiving\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport { msgError, msgSuccess, apiUrl, tokenApi, getSessionCurrentUrl } from './../../../assets/custom/custom.js';\nimport moment from 'moment';\nexport default {\n  data() {\n    return {\n      total_sku: 0,\n      total_scan_qty: 0,\n      p_invoice_no: '',\n      receiving_no: '',\n      v_show_remarks: false,\n      p_date: moment().format('YYYY-MM-DD'),\n      p_supplier: '',\n      p_barcode: '',\n      p_uom: '',\n      file: '',\n      p_temp_id: '',\n      p_pos_markup: '',\n      p_qty: 1,\n      p_pos_barcode: '',\n      p_remarks: '',\n      p_pos_product_id: '',\n      p_unit_cost: '',\n      temporary_show: false,\n      loading_post: false,\n      loading_barcode: false,\n      btn_cancel: false,\n      btn_post: true,\n      list_supplier_open: [],\n      list_temporary_items: [],\n      list_uoms: []\n    };\n  },\n\n  mounted() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      getSessionCurrentUrl(_this, 'OpenPoVariable');\n      yield _this.fetch_supplier_open();\n      yield _this.fetch_list_uom();\n    })();\n  },\n\n  methods: {\n    fetch_supplier_open() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        let query = {\n          headers: tokenApi('token', 'header')\n        };\n\n        try {\n          let result = yield axios.get(apiUrl('purchaser/receive_po/op/variable/fetch_supplier_open'), query);\n          let data = result.data;\n          _this2.list_supplier_open = data.list_supplier_open;\n        } catch (error) {\n          yield _this2.handdleError(error);\n        }\n      })();\n    },\n\n    fetch_barcode() {\n      var _this3 = this;\n\n      return _asyncToGenerator(function* () {\n        let query = {\n          params: {\n            p_barcode: _this3.p_barcode,\n            p_vendor_code: _this3.p_supplier\n          },\n          headers: tokenApi('token', 'header')\n        };\n\n        try {\n          let result = yield axios.get(apiUrl('purchaser/receive_po/op/variable/fetch_barcode'), query);\n          let data = result.data;\n          _this3.p_barcode = data.vendor_product.description;\n\n          if (_this3.p_uom == \"\") {\n            _this3.p_uom = data.pos_product[0].uom;\n          }\n\n          if (_this3.p_unit_cost == \"\") {\n            _this3.p_unit_cost = \"\"; //this.p_unit_cost = data.vendor_product.cost.toFixed(3)\n          }\n\n          _this3.p_pos_barcode = data.pos_product[0].barcode;\n          _this3.p_pos_product_id = data.vendor_product.productid;\n          _this3.p_pos_markup = data.pos_product[0].markup;\n        } catch (error) {\n          yield _this3.handdleError(error);\n        }\n      })();\n    },\n\n    delete_items(temp_receiving_id, id) {\n      var _this4 = this,\n          _arguments = arguments;\n\n      return _asyncToGenerator(function* () {\n        let type = _arguments.length > 2 && _arguments[2] !== undefined ? _arguments[2] : null;\n\n        try {\n          let confirm = window.confirm('Confirm delete');\n\n          if (confirm) {\n            let data = {\n              p_temp_id: temp_receiving_id,\n              p_invoice_no: _this4.p_invoice_no,\n              p_supplier: _this4.p_supplier,\n              p_id: id,\n              p_type: type\n            };\n            let result = yield axios.post(apiUrl('purchaser/receive_po/op/variable/delete_items'), data, tokenApi());\n            let res = result.data;\n            let query = {\n              p_invoice_no: _this4.p_invoice_no,\n              p_supplier: _this4.p_supplier\n            };\n            yield _this4.fetch_temporary_item(query);\n            msgSuccess(200, \"Successfully deleted items\");\n\n            if (res.count_items == 1) {\n              window.location.href = '/receive/op/variable';\n            }\n          }\n        } catch (error) {\n          yield _this4.handdleError(error);\n        }\n      })();\n    },\n\n    add_item() {\n      var _this5 = this;\n\n      return _asyncToGenerator(function* () {\n        try {\n          let data = {\n            p_vendor_code: _this5.p_supplier,\n            p_invoice_no: _this5.p_invoice_no,\n            p_date_deliver: _this5.p_date,\n            p_product_id: _this5.p_pos_product_id,\n            p_barcode: _this5.p_pos_barcode,\n            p_item_name: _this5.p_barcode,\n            p_uom: _this5.p_uom,\n            p_qty: _this5.p_qty,\n            p_price: _this5.p_unit_cost,\n            p_markup: _this5.p_pos_markup\n          };\n\n          if (_this5.p_unit_cost == \"\") {\n            return msgError(401, \"PAKIUSAP PO PAKI LAGYAN NG UNIT COST\");\n          }\n\n          yield axios.post(apiUrl('purchaser/receive_po/op/variable/add_item'), data, tokenApi());\n          let query = {\n            p_invoice_no: _this5.p_invoice_no,\n            p_supplier: _this5.p_supplier\n          };\n          yield _this5.fetch_temporary_item(query);\n        } catch (error) {\n          yield _this5.handdleError(error);\n        }\n      })();\n    },\n\n    approve() {\n      var _this6 = this;\n\n      return _asyncToGenerator(function* () {\n        let invoice_no = _this6.p_invoice_no;\n        let supplier = _this6.p_supplier;\n        let date = _this6.p_date;\n\n        if (invoice_no == \"\") {\n          return msgError(401, 'INVOICE NUMBER IS REQUIRED');\n        }\n\n        if (supplier == \"\") {\n          return msgError(401, 'SUPPLIER IS REQUIRED');\n        }\n\n        if (date == \"\") {\n          return msgError(401, 'DATE IS REQUIRED');\n        }\n\n        let query = {\n          p_invoice_no: invoice_no,\n          p_supplier: supplier\n        };\n        yield _this6.fetch_temporary_item(query, 'check_supplier');\n      })();\n    },\n\n    fetch_list_uom() {\n      var _this7 = this;\n\n      return _asyncToGenerator(function* () {\n        try {\n          let query = {\n            headers: tokenApi('token', 'header')\n          };\n          let result = yield axios.get(apiUrl('purchaser/receive_po/op/variable/fetch_list_uom'), query);\n          let data = result.data;\n          _this7.list_uoms = data.list_uoms;\n        } catch (error) {\n          yield _this7.handdleError(error);\n        }\n      })();\n    },\n\n    refresh() {\n      var _this8 = this;\n\n      return _asyncToGenerator(function* () {\n        _this8.file = '';\n        _this8.p_invoice_no = '';\n        _this8.p_date = moment().format('YYYY-MM-DD');\n        _this8.p_supplier = '';\n        _this8.p_barcode = '';\n        _this8.p_uom = '';\n        _this8.p_temp_id = '';\n        _this8.p_pos_markup = '';\n        _this8.p_qty = 1;\n        _this8.p_pos_barcode = '';\n        _this8.p_remarks = '';\n        _this8.p_pos_product_id = '';\n        _this8.p_unit_cost = '';\n        _this8.temporary_show = false;\n        _this8.loading_post = false;\n        _this8.loading_barcode = false;\n        _this8.btn_cancel = false;\n        _this8.btn_post = true;\n        _this8.list_temporary_items = [];\n      })();\n    },\n\n    cancel(temp_receiving_id, p_supplier) {\n      return _asyncToGenerator(function* () {\n        swal({\n          title: \"Are you sure?\",\n          text: \"You will not be able to recover this!\",\n          type: \"warning\",\n          showCancelButton: true,\n          confirmButtonColor: \"#DD6B55\",\n          confirmButtonText: \"Yes, cancel it!\",\n          closeOnConfirm: false,\n          html: false\n        },\n        /*#__PURE__*/\n        _asyncToGenerator(function* () {\n          let data = {\n            p_temp_id: temp_receiving_id,\n            p_supplier: p_supplier,\n            p_id: null,\n            p_type: 'cancel'\n          };\n          yield axios.post(apiUrl('purchaser/receive_po/op/variable/delete_items'), data, tokenApi());\n          window.location.href = '/receive/op/variable';\n        }));\n      })();\n    },\n\n    post_receiving() {\n      var _this9 = this;\n\n      return _asyncToGenerator(function* () {\n        try {\n          if (_this9.v_show_remarks === true) {\n            return msgError(401, \"Remarks is required\");\n          }\n\n          let formData = new FormData();\n\n          if (_this9.file == \"\") {\n            return msgError(401, \"Invoice file is required\");\n          }\n\n          if (_this9.p_temp_id == \"\") {\n            return msgError(401, \"NO TEMPORARY ID\");\n          }\n\n          _this9.btn_post = true;\n          _this9.loading_post = true;\n          formData.append('file', _this9.file);\n          formData.append('p_inv_no', _this9.p_invoice_no);\n          formData.append('p_vendor_code', _this9.p_supplier);\n          formData.append('p_remarks', _this9.p_remarks);\n          formData.append('p_temp_id', _this9.p_temp_id);\n          let result = yield axios.post(apiUrl('purchaser/receive_po/op/variable/post_receiving'), formData, tokenApi());\n          let res = result.data;\n\n          _this9.$session.flash.set('receiving_no', res.receiving_no);\n\n          _this9.receiving_no = _this9.$session.flash.get('receiving_no');\n\n          _this9.$router.push({\n            name: 'OpenPoVariable'\n          });\n\n          yield _this9.refresh();\n        } catch (error) {\n          _this9.handdleError(error);\n        }\n\n        _this9.btn_post = false;\n        _this9.loading_post = false;\n      })();\n    },\n\n    fetch_temporary_item(params) {\n      var _this10 = this,\n          _arguments2 = arguments;\n\n      return _asyncToGenerator(function* () {\n        let check_supplier = _arguments2.length > 1 && _arguments2[1] !== undefined ? _arguments2[1] : \"\";\n\n        try {\n          _this10.btn_cancel = false;\n          let query = {\n            headers: tokenApi('token', 'header'),\n            params: params\n          };\n          let result = yield axios.get(apiUrl('purchaser/receive_po/op/variable/fetch_temporary_item'), query);\n          let data = result.data;\n\n          if (data.list_temporary_items.length > 0) {\n            _this10.btn_cancel = true;\n            _this10.btn_post = false;\n          }\n\n          _this10.p_temp_id = data.temp_id;\n          _this10.list_temporary_items = data.list_temporary_items;\n          _this10.total_sku = data.list_temporary_items.length;\n          _this10.temporary_show = true;\n        } catch (error) {\n          if (check_supplier == \"check_supplier\") {\n            _this10.temporary_show = false;\n          }\n\n          yield _this10.handdleError(error);\n        }\n\n        _this10.p_barcode = '';\n        _this10.p_uom = '';\n        _this10.p_pos_markup = '';\n        _this10.p_qty = 1;\n        _this10.p_pos_barcode = '';\n        _this10.p_pos_product_id = '';\n        _this10.p_unit_cost = '';\n      })();\n    },\n\n    handleFileUpload() {\n      var _this11 = this;\n\n      return _asyncToGenerator(function* () {\n        _this11.file = _this11.$refs.file.files[0];\n      })();\n    },\n\n    totalCost(values) {\n      return values.reduce((acc, val) => {\n        return acc + parseFloat(val.net_price);\n      }, 0);\n    },\n\n    totalSkuScan(values) {\n      return values.reduce((acc, val) => {\n        return acc + parseFloat(val.qty);\n      }, 0);\n    },\n\n    handdleError() {\n      var _arguments3 = arguments;\n      return _asyncToGenerator(function* () {\n        let error = _arguments3.length > 0 && _arguments3[0] !== undefined ? _arguments3[0] : null;\n\n        if (error != null) {\n          const response = JSON.parse(JSON.stringify(error));\n          const status = response.response.status.toString();\n          const message = response.response.data.error === undefined ? response.response.data.message : response.response.data.error.message;\n          msgError(status, message);\n          return true;\n        }\n\n        msgError(401, \"Something Wrong\");\n      })();\n    }\n\n  }\n};",{"version":3,"sources":["OpenVariable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    \r\n   <div class=\"panel-body\">\r\n    <!-- Main content -->\r\n    <div class=\"content-wrapper  col-sm-12\">\r\n        <div class=\"panel panel-flat\">\r\n            <div class=\"table-responsive\">\r\n                <div v-if=\"receiving_no != '' \">\r\n                    <div class=\"alert alert-success\" style=\"border-radius:0px;\"><h2>Receiving #  {{ receiving_no }} has been posted. Pakisulat sa Invoice. </h2></div>\r\n                </div>\r\n                <table class=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>INVOICE #:</th>\r\n                            <th>\r\n                                <input type=\"hidden\" id=\"p_temp_id\" class=\"col-sm-12 form-control input-sm\" v-model=\"p_temp_id\">\r\n                                <input type=\"text\" id=\"p_invoice_no\" class=\"col-sm-12 form-control input-sm\" v-model=\"p_invoice_no\">\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>SUPPLIER :</th>\r\n                            <th>\r\n                                <select v-model=\"p_supplier\" id=\"p_supplier\" class=\"col-sm-12 form-control input-sm\">\r\n                                    <option value=\"\"> -- SELECT --</option>\r\n                                    <option v-bind:value=\"row.vendor_code\" v-for=\"(row, i) in list_supplier_open\" :key=\"i\"> {{ row.description }}</option>\r\n                                </select>\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>DATE RECEIVE : </th>\r\n                            <th>\r\n                                <input type=\"date\" id=\"p_date\" class=\"col-sm-12 form-control input-sm\" v-model=\"p_date\">\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th> </th>\r\n                            <th>\r\n                                <button type=\"button\" class=\"col-sm-6 col-xs-12 btn btn-primary\" v-on:click=\"approve()\">APPROVE</button>\r\n                                <button type=\"button\" class=\"col-sm-6 col-xs-12 btn btn-danger\" :disabled=\"!btn_cancel\" v-on:click=\"cancel(p_temp_id, p_supplier)\">CANCEL</button>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Main content -->\r\n    <div class=\"content-wrapper  col-sm-12\" v-show=\"temporary_show\">\r\n        <div class=\"panel panel-flat\">\r\n            <div class=\"panel-heading\">\r\n                <p class=\"panel-title\">ITEM SCANNED</p>\r\n            </div>\r\n\r\n            <div class=\"table-responsive\">\r\n                <table class=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ITEM NAME</th>\r\n                            <th>DETAILS</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr v-for=\"(row, i) in list_temporary_items\" :key=\"i\">\r\n                            <td> {{row.item_name }} </td>\r\n                            <td> \r\n                                QTY: {{row.qty }} <br>\r\n                                UOM: {{row.uom }} <br>\r\n                                UNIT COST: {{row.price | toFixed2 }} <br>\r\n                                TOTAL: {{row.net_price | toFixed2}} <br>\r\n                            </td>\r\n                            <td> \r\n                                <button class=\"btn btn-danger btn-sm\" v-on:click=\"delete_items(row.temp_open_po_id, row.d_id)\"><i class=\"icon-cancel-circle2\"></i></button>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>\r\n                                TOTAL: {{ totalCost(list_temporary_items) | toFixed2 }}\r\n                            </td>\r\n                            <td></td>\r\n                        </tr>\r\n                         <tr>\r\n                            <td>\r\n                                <p v-show=\"loading_barcode\" class=\"pull-left\" >\r\n                                    <i class=\"icon-spinner4 spinner position-left\"></i> PLEASE WAIT ..\r\n                                </p>\r\n                                <input type=\"hidden\" class=\"form-control\" v-model=\"p_pos_barcode\" v-on:keyup.13=\"fetch_barcode\">\r\n                                <input type=\"hidden\" class=\"form-control\" v-model=\"p_pos_markup\" v-on:keyup.13=\"fetch_barcode\">\r\n                                <input type=\"hidden\" class=\"form-control\" v-model=\"p_pos_product_id\" v-on:keyup.13=\"fetch_barcode\">\r\n                                <input class=\"form-control\" placeholder=\"Enter Barcode\" v-model=\"p_barcode\" v-on:keyup.13=\"fetch_barcode\">\r\n                                <select v-model=\"p_uom\" id=\"p_uom\" class=\"col-sm-12 form-control input-sm\">\r\n                                    <option value=\"\"> -- UOM -- </option>\r\n                                    <option v-bind:value=\"row.a1\" v-for=\"(row, i) in list_uoms\" :key=\"i\"> {{ row.a1 }}</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                                <input class=\"form-control\" style=\"text-align:left;\"  v-model=\"p_qty\" placeholder=\"QTY\">\r\n                                <input class=\"form-control\" style=\"text-align:left;\"  v-model=\"p_unit_cost\" placeholder=\"UNIT COST\">\r\n                            </td>\r\n                            <td>\r\n                                <button class=\"btn btn-primary\" v-on:click=\"add_item()\"><i class=\"icon-plus3\"></i></button>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td style=\"text-align:center !important\">SKU SCANNED:{{ total_sku }}</td>\r\n                            <td style=\"text-align:center !important\">TOTAL SCAN QTY:  {{ totalSkuScan(list_temporary_items) }}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colspan=\"4\" align=\"left\">\r\n                                <input type=\"checkbox\"  class=\"control-primary\"  name=\"v_show_cv\" v-on:click=\"() => this.v_show_remarks = (this.v_show_remarks === true) ? false : true \"> \r\n                                On hold CV (Paki check kung invoice replacement)\r\n                            </td>\r\n                        <tr>\r\n                        <tr v-show=\"v_show_remarks\">\r\n                            <td colspan=\"3\">\r\n                                <textarea name=\"\" id=\"\" class=\"form-control\" placeholder=\"Remarks\" v-model=\"p_remarks\"></textarea>\r\n                            </td>\r\n                        <tr>\r\n                            <td colspan=\"3\">\r\n                              <input class=\"form-control\" style=\"text-align:left;\" id=\"file\" ref=\"file\"  v-on:change=\"handleFileUpload()\" type=\"file\" >\r\n                              ( Maaring Mag upload ng Multipe Scan Invoice Kung ito ay IMAGE file ) <br>\r\n                              ( Kung Ito naman ay pdf file isa lang ang maaring mong ma upload )\r\n                            </td>\r\n                        <tr>\r\n                        <tr>\r\n                            <td colspan=\"3\">\r\n                                \r\n                                <button type=\"button\" :disabled=\"btn_post\" class=\"btn btn-sm btn-primary col-xs-12\" v-on:click=\"post_receiving()\">\r\n                                    <div v-if=\"loading_post\">\r\n                                        <i class=\"icon-spinner4 spinner position-left\"></i> PLEASE WAIT ..\r\n                                    </div>\r\n                                    <div v-if=\"!loading_post\">\r\n                                        <i class=\"icon-checkmark\"></i> POST\r\n                                    </div>\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n        \r\n    </div>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { msgError, msgSuccess, apiUrl, tokenApi, getSessionCurrentUrl } from './../../../assets/custom/custom.js'\r\nimport moment from 'moment'\r\n\r\nexport default {\r\n    data(){\r\n        return {\r\n            total_sku: 0,\r\n            total_scan_qty: 0,\r\n            p_invoice_no: '',\r\n            receiving_no: '',\r\n            v_show_remarks: false,\r\n            p_date: moment().format('YYYY-MM-DD'),\r\n            p_supplier: '',\r\n            p_barcode: '',\r\n            p_uom: '',\r\n            file: '',\r\n            p_temp_id: '',\r\n            p_pos_markup: '',\r\n            p_qty: 1,\r\n            p_pos_barcode: '',\r\n            p_remarks: '',\r\n            p_pos_product_id: '',\r\n            p_unit_cost:'',\r\n            temporary_show: false,\r\n            loading_post: false,\r\n            loading_barcode: false,\r\n            btn_cancel: false,\r\n            btn_post: true,\r\n            list_supplier_open: [],\r\n            list_temporary_items: [],\r\n            list_uoms:[]\r\n        }\r\n    },\r\n    async mounted(){\r\n        getSessionCurrentUrl(this, 'OpenPoVariable')\r\n        await this.fetch_supplier_open()\r\n        await this.fetch_list_uom()\r\n    },\r\n    methods:{\r\n        async fetch_supplier_open() {\r\n           let query = {\r\n               headers: tokenApi('token', 'header')\r\n           }\r\n           try {\r\n               let result = await axios.get(apiUrl('purchaser/receive_po/op/variable/fetch_supplier_open'), query)\r\n               let data   = result.data\r\n               this.list_supplier_open = data.list_supplier_open\r\n           } catch (error) {\r\n               await this.handdleError(error)\r\n           }\r\n        },\r\n        async fetch_barcode(){\r\n            let query = {\r\n               params: {\r\n                    p_barcode: this.p_barcode,\r\n                    p_vendor_code: this.p_supplier\r\n               },\r\n               headers: tokenApi('token', 'header')\r\n           }\r\n           try {\r\n               let result = await axios.get(apiUrl('purchaser/receive_po/op/variable/fetch_barcode'), query)\r\n               let data   = result.data\r\n               \r\n               this.p_barcode = data.vendor_product.description\r\n               if (this.p_uom == \"\") {\r\n                   this.p_uom = data.pos_product[0].uom\r\n               }\r\n               if (this.p_unit_cost == \"\") {\r\n                   this.p_unit_cost = \"\"\r\n                   //this.p_unit_cost = data.vendor_product.cost.toFixed(3)\r\n               }\r\n               this.p_pos_barcode    = data.pos_product[0].barcode\r\n               this.p_pos_product_id = data.vendor_product.productid\r\n               this.p_pos_markup     = data.pos_product[0].markup\r\n\r\n           } catch (error) {\r\n               await this.handdleError(error)\r\n           }\r\n        },\r\n        async delete_items(temp_receiving_id, id, type=null) {\r\n            try {\r\n                let confirm = window.confirm('Confirm delete');\r\n                if(confirm) {\r\n                    let data = {\r\n                        p_temp_id: temp_receiving_id,\r\n                        p_invoice_no: this.p_invoice_no, \r\n                        p_supplier: this.p_supplier,\r\n                        p_id: id,\r\n                        p_type: type\r\n                    }\r\n                    let result = await axios.post(apiUrl('purchaser/receive_po/op/variable/delete_items'), data , tokenApi())\r\n                    let res    = result.data\r\n                    let query = {\r\n                        p_invoice_no: this.p_invoice_no,\r\n                        p_supplier: this.p_supplier\r\n                    }\r\n\r\n                    await this.fetch_temporary_item(query)\r\n                    msgSuccess(200, \"Successfully deleted items\")\r\n                    if (res.count_items == 1 ) {\r\n                        window.location.href = '/receive/op/variable'\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                await this.handdleError(error)\r\n            }\r\n        },\r\n        async add_item(){\r\n            try {\r\n                let data = {\r\n                    p_vendor_code  : this.p_supplier,\r\n                    p_invoice_no   : this.p_invoice_no,\r\n                    p_date_deliver : this.p_date,\r\n\r\n                    p_product_id : this.p_pos_product_id,\r\n                    p_barcode: this.p_pos_barcode,\r\n                    p_item_name: this.p_barcode,\r\n                    p_uom: this.p_uom,\r\n                    p_qty: this.p_qty,\r\n                    p_price: this.p_unit_cost,\r\n                    p_markup: this.p_pos_markup\r\n                }\r\n\r\n                if(this.p_unit_cost == \"\") {\r\n                    return msgError(401, \"PAKIUSAP PO PAKI LAGYAN NG UNIT COST\")\r\n                }\r\n\r\n                await axios.post(apiUrl('purchaser/receive_po/op/variable/add_item'), data , tokenApi())\r\n                let query = {\r\n                    p_invoice_no: this.p_invoice_no,\r\n                    p_supplier: this.p_supplier\r\n                }\r\n\r\n                await this.fetch_temporary_item(query)\r\n            } catch (error) {\r\n                await this.handdleError(error)\r\n            }\r\n        },\r\n        async approve(){\r\n            let invoice_no = this.p_invoice_no\r\n            let supplier   = this.p_supplier\r\n            let date       = this.p_date\r\n\r\n            if (invoice_no == \"\") {\r\n                return msgError(401, 'INVOICE NUMBER IS REQUIRED')\r\n            }\r\n\r\n            if (supplier == \"\") {\r\n                return msgError(401, 'SUPPLIER IS REQUIRED')\r\n            }\r\n\r\n            if (date == \"\") {\r\n                return msgError(401, 'DATE IS REQUIRED')\r\n            }\r\n            let query = {\r\n                p_invoice_no: invoice_no,\r\n                p_supplier: supplier\r\n            }\r\n            \r\n            await this.fetch_temporary_item(query, 'check_supplier')\r\n        },\r\n        async fetch_list_uom(){\r\n            try {\r\n                let query = {\r\n                    headers: tokenApi('token', 'header')\r\n                }\r\n                let result = await axios.get(apiUrl('purchaser/receive_po/op/variable/fetch_list_uom'), query)\r\n                let data   = result.data\r\n                this.list_uoms = data.list_uoms\r\n            } catch (error) {\r\n                await this.handdleError(error)\r\n            }\r\n        },\r\n        async refresh(){\r\n            this.file =  ''\r\n            this.p_invoice_no =  ''\r\n            this.p_date =  moment().format('YYYY-MM-DD')\r\n            this.p_supplier =  ''\r\n            this.p_barcode =  ''\r\n            this.p_uom =  ''\r\n            this.p_temp_id =  ''\r\n            this.p_pos_markup =  ''\r\n            this.p_qty =  1\r\n            this.p_pos_barcode =  ''\r\n            this.p_remarks =  ''\r\n            this.p_pos_product_id =  ''\r\n            this.p_unit_cost = ''\r\n            this.temporary_show =  false\r\n            this.loading_post =  false\r\n            this.loading_barcode =  false\r\n            this.btn_cancel =  false\r\n            this.btn_post =  true\r\n            this.list_temporary_items =  []\r\n        },\r\n        async cancel(temp_receiving_id, p_supplier) {\r\n            swal({\r\n                title: \"Are you sure?\",\r\n                text: \"You will not be able to recover this!\",\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonColor: \"#DD6B55\",\r\n                confirmButtonText: \"Yes, cancel it!\",\r\n                closeOnConfirm: false,\r\n                html: false\r\n            },  async function(){\r\n                 let data = {\r\n                    p_temp_id: temp_receiving_id,\r\n                    p_supplier: p_supplier,\r\n                    p_id: null,\r\n                    p_type: 'cancel'\r\n                }\r\n                await axios.post(apiUrl('purchaser/receive_po/op/variable/delete_items'), data , tokenApi())\r\n                window.location.href = '/receive/op/variable'\r\n            })\r\n        },\r\n        async post_receiving() {\r\n            try {\r\n                if(this.v_show_remarks === true) {\r\n                    return msgError(401, \"Remarks is required\")\r\n                }\r\n\r\n                let formData = new FormData()\r\n                if (this.file == \"\") {\r\n                    return msgError(401, \"Invoice file is required\")\r\n                }\r\n\r\n                if (this.p_temp_id == \"\") {\r\n                    return msgError(401, \"NO TEMPORARY ID\")\r\n                }\r\n\r\n                this.btn_post = true\r\n                this.loading_post = true\r\n\r\n                formData.append('file', this.file)\r\n                formData.append('p_inv_no', this.p_invoice_no)\r\n                formData.append('p_vendor_code', this.p_supplier)\r\n                formData.append('p_remarks', this.p_remarks)\r\n                formData.append('p_temp_id', this.p_temp_id)\r\n                \r\n                let result = await axios.post(apiUrl('purchaser/receive_po/op/variable/post_receiving'), formData, tokenApi())\r\n                let res    = result.data\r\n\r\n                this.$session.flash.set('receiving_no', res.receiving_no)\r\n                this.receiving_no = this.$session.flash.get('receiving_no')\r\n                this.$router.push({ name: 'OpenPoVariable' })\r\n                await this.refresh()\r\n            } catch (error) {\r\n                this.handdleError(error)\r\n            }\r\n            this.btn_post = false\r\n            this.loading_post = false\r\n        },\r\n        async fetch_temporary_item(params,check_supplier=\"\"){\r\n          try {\r\n                this.btn_cancel = false\r\n                let query = {\r\n                    headers : tokenApi('token', 'header'),\r\n                    params : params\r\n                }\r\n                let result = await axios.get(apiUrl('purchaser/receive_po/op/variable/fetch_temporary_item'), query)\r\n                let data   = result.data\r\n                if (data.list_temporary_items.length > 0) {\r\n                        this.btn_cancel = true\r\n                        this.btn_post   = false\r\n                }\r\n                this.p_temp_id            = data.temp_id\r\n                this.list_temporary_items = data.list_temporary_items\r\n                this.total_sku = data.list_temporary_items.length\r\n                this.temporary_show  = true\r\n            } catch (error) {\r\n                if (check_supplier == \"check_supplier\") {\r\n                    this.temporary_show = false\r\n                }\r\n                await this.handdleError(error)\r\n            }  \r\n            this.p_barcode     = ''\r\n            this.p_uom         = ''\r\n            this.p_pos_markup  = ''\r\n            this.p_qty         = 1\r\n            this.p_pos_barcode = ''\r\n            this.p_pos_product_id = ''\r\n            this.p_unit_cost      = ''\r\n        },\r\n        async handleFileUpload() {\r\n            this.file = this.$refs.file.files[0];\r\n        },\r\n        \r\n        totalCost(values){\r\n            return values.reduce((acc, val) =>{\r\n                return acc + parseFloat(val.net_price)\r\n            }, 0)\r\n        },\r\n        totalSkuScan(values){\r\n            return values.reduce((acc, val) =>{\r\n                return acc + parseFloat(val.qty)\r\n            }, 0)\r\n        },\r\n        async handdleError(error=null) {\r\n            if (error != null) {\r\n                const response = JSON.parse(JSON.stringify(error))\r\n                const status = response.response.status.toString()\r\n                const message = (response.response.data.error === undefined) ? response.response.data.message : response.response.data.error.message\r\n                msgError(status, message)\r\n                return true\r\n            }\r\n                msgError(401, \"Something Wrong\")\r\n        }\r\n\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\ninput, textarea, select, option{\r\n  border-radius: 0px !important;\r\n   font-size: 10px !important;\r\n   resize: none;\r\n}\r\n.btn {\r\n    border-radius: 0px;\r\n}\r\nth,td {\r\n  padding: 10px !important;\r\n  font-size: 10px;\r\n  text-align: center !important;\r\n}\r\n</style>\r\n\r\n"],"sourceRoot":"src/components/receive_open/variable"}]}