{"remainingRequest":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\src\\components\\po\\UploadInvoice.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\src\\components\\po\\UploadInvoice.vue","mtime":1579108071163},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport axios from 'axios';\r\nimport { msgError, apiUrl, tokenApi, getSessionCurrentUrl } from './../../assets/custom/custom.js'\r\n\r\nexport default {\r\n    data(){\r\n        return {\r\n          btn_post: false,\r\n          loading_post: false,\r\n          file: '',\r\n          p_name: '',\r\n          p_message: ''\r\n        }\r\n    },\r\n    async mounted(){\r\n        getSessionCurrentUrl(this, 'UploadInvoice')\r\n    },\r\n    methods:{\r\n      async post_receiving() {\r\n            try {\r\n                let formData = new FormData()\r\n                if (this.file == \"\") {\r\n                    return msgError(401, \"Invoice file is required\")\r\n                }\r\n\r\n                if(this.p_name == \"\") {\r\n                  return msgError(401, \"P.O# AND RECEIVING NO# IS REQUIRED SAMPLE FORMAT (P.O#-RECEIVING#) -> PO21345-123456 OR PO21345-0000012345\")\r\n                }\r\n                this.btn_post = true\r\n                this.loading_post = true\r\n                for (let i = 0; i < this.file.length; i++) {\r\n                    let file = this.file[i]\r\n                    formData.append('file[' + i + ']', file);\r\n                }\r\n                formData.append('p_name', this.p_name)\r\n                await axios.post(apiUrl('purchaser/receive_po/po/post_upload_invoice'), formData, tokenApi())\r\n\r\n                this.$session.flash.set('p_message', 'Success')\r\n                this.p_message = this.$session.flash.get('p_message')\r\n                \r\n                this.$router.push({ name: 'UploadInvoice' })\r\n                \r\n                await this.refresh()\r\n\r\n            } catch (error) {\r\n                this.handdleError(error)\r\n            }\r\n            this.btn_post = false\r\n            this.loading_post = false\r\n        },\r\n        async handleFileUpload() {\r\n            this.file = this.$refs.file.files;\r\n        },\r\n        async refresh(enable=false){\r\n          if(enable === false) {\r\n              let input = this.$refs.file;\r\n              input.type = 'text';\r\n              input.type = 'file';\r\n            }\r\n          this.file = ''\r\n          this.p_name = ''\r\n        },\r\n        async handdleError(error=null){\r\n            if (error != null) {\r\n                const response = JSON.parse(JSON.stringify(error))\r\n                const status = response.response.status.toString()\r\n                const message = (response.response.data.error === undefined) ? response.response.data.message : response.response.data.error.message\r\n                msgError(status, message)\r\n                return true\r\n            }\r\n                msgError(401, \"Something Wrong\")\r\n        }\r\n    }\r\n}\r\n\r\n",{"version":3,"sources":["UploadInvoice.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UploadInvoice.vue","sourceRoot":"src/components/po","sourcesContent":["<template>\r\n    <div class=\"panel-body\">\r\n      <div v-if=\"p_message != '' \">\r\n          <div class=\"alert alert-success\" style=\"border-radius:0px;\"><h2>Successfully Upload Scanned Invoice </h2></div>\r\n      </div>\r\n       <table class=\"table table-bordered\">\r\n         <thead>\r\n          <tr>\r\n            <th>P.O # - RECEIVING NO</th>\r\n            <th >\r\n                <p>EXAMPLE FORMAT (P.O#-RECEIVING#) -> PO21345-12345 OR PO21345-0000012345</p>\r\n                <input type=\"text\" id=\"\" class=\"form-control\" placeholder=\"PO21345-123456 OR PO21345-0000012345\" v-model=\"p_name\">\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th  width=\"20%;\" style=\"text-align:right\">UPLOAD INVOICE ATTACHMENT</th>\r\n            <th  width=\"50%;\"><input class=\"form-control\" multiple style=\"text-align:left;\" id=\"file\" ref=\"file\"  v-on:change=\"handleFileUpload()\" type=\"file\" ></th>\r\n          </tr>\r\n          <tr>\r\n            <th colspan=\"2\">\r\n                <button type=\"button\" :disabled=\"btn_post\" class=\"btn btn-sm btn-primary col-xs-12\" v-on:click=\"post_receiving()\">\r\n                    <div v-if=\"loading_post\">\r\n                        <i class=\"icon-spinner4 spinner position-left\"></i> PLEASE WAIT ..\r\n                    </div>\r\n                    <div v-if=\"!loading_post\">\r\n                        <i class=\"icon-checkmark\"></i> UPLOAD\r\n                    </div>\r\n                </button>\r\n            </th>\r\n          </tr>\r\n         </thead>\r\n       </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { msgError, apiUrl, tokenApi, getSessionCurrentUrl } from './../../assets/custom/custom.js'\r\n\r\nexport default {\r\n    data(){\r\n        return {\r\n          btn_post: false,\r\n          loading_post: false,\r\n          file: '',\r\n          p_name: '',\r\n          p_message: ''\r\n        }\r\n    },\r\n    async mounted(){\r\n        getSessionCurrentUrl(this, 'UploadInvoice')\r\n    },\r\n    methods:{\r\n      async post_receiving() {\r\n            try {\r\n                let formData = new FormData()\r\n                if (this.file == \"\") {\r\n                    return msgError(401, \"Invoice file is required\")\r\n                }\r\n\r\n                if(this.p_name == \"\") {\r\n                  return msgError(401, \"P.O# AND RECEIVING NO# IS REQUIRED SAMPLE FORMAT (P.O#-RECEIVING#) -> PO21345-123456 OR PO21345-0000012345\")\r\n                }\r\n                this.btn_post = true\r\n                this.loading_post = true\r\n                for (let i = 0; i < this.file.length; i++) {\r\n                    let file = this.file[i]\r\n                    formData.append('file[' + i + ']', file);\r\n                }\r\n                formData.append('p_name', this.p_name)\r\n                await axios.post(apiUrl('purchaser/receive_po/po/post_upload_invoice'), formData, tokenApi())\r\n\r\n                this.$session.flash.set('p_message', 'Success')\r\n                this.p_message = this.$session.flash.get('p_message')\r\n                \r\n                this.$router.push({ name: 'UploadInvoice' })\r\n                \r\n                await this.refresh()\r\n\r\n            } catch (error) {\r\n                this.handdleError(error)\r\n            }\r\n            this.btn_post = false\r\n            this.loading_post = false\r\n        },\r\n        async handleFileUpload() {\r\n            this.file = this.$refs.file.files;\r\n        },\r\n        async refresh(enable=false){\r\n          if(enable === false) {\r\n              let input = this.$refs.file;\r\n              input.type = 'text';\r\n              input.type = 'file';\r\n            }\r\n          this.file = ''\r\n          this.p_name = ''\r\n        },\r\n        async handdleError(error=null){\r\n            if (error != null) {\r\n                const response = JSON.parse(JSON.stringify(error))\r\n                const status = response.response.status.toString()\r\n                const message = (response.response.data.error === undefined) ? response.response.data.message : response.response.data.error.message\r\n                msgError(status, message)\r\n                return true\r\n            }\r\n                msgError(401, \"Something Wrong\")\r\n        }\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n\r\n"]}]}