{"remainingRequest":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\src\\components\\transfer\\receive\\Receive.vue?vue&type=style&index=0&id=74267da9&scoped=true&lang=css&","dependencies":[{"path":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\src\\components\\transfer\\receive\\Receive.vue","mtime":1585935235912},{"path":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nth,td {\r\n  padding: 10px !important;\r\n  font-size: 10px;\r\n  text-align: center !important;\r\n}\r\n",{"version":3,"sources":["Receive.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmZA;AACA;AACA;AACA;AACA","file":"Receive.vue","sourceRoot":"src/components/transfer/receive","sourcesContent":["<template>\r\n    <div class=\"panel-body\">\r\n       \r\n        <!-- Main content -->\r\n        <div class=\"content-wrapper col-sm-12\" >\r\n            \r\n            <div class=\"panel panel-flat\">\r\n                <div class=\"panel-heading\">\r\n                    <p>\r\n                         <a style=\"border-radius:0px;\">&nbsp;&nbsp;<i class=\"icon icon-undo\"></i><router-link to=\"/receive/transfer/receive\"> CLICK ME TO BACK</router-link> </a>\r\n                    </p>\r\n                    <p class=\"panel-title\">ITEMS FOR TRANSFER # {{ p_transfer_no }} </p>\r\n                    <div class=\"heading-elements\">\r\n                        <ul class=\"icons-list\">\r\n                            <li><a data-action=\"collapse\"></a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table table-bordered\">\r\n                        <thead >\r\n                            <tr v-show=\"loading_receive_details\">\r\n                                <th colspan=\"2\"  style=\"text-align:center\">\r\n                                    <p>\r\n                                        <i class=\"icon-spinner4 spinner position-left\"></i> PLEASE WAIT ..\r\n                                    </p>\r\n                                </th>\r\n                            </tr>\r\n                            <tr v-show=\"!loading_receive_details\">\r\n                                <th style=\"text-align:center;font-size:12px;\">\r\n                                    TRANSFER #: {{ p_transfer_no }}<br>\r\n                                    DELIVERY DATE: {{ p_delivery_date | date  }}<br>\r\n                                    FROM BRANCH:  {{ p_br_code_out }}\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th style=\"text-align:center;font-size:12px;\">\r\n                                    REQUESTED BY: {{ p_requested_by | uppercase }}<br>\r\n                                    DATE CREATED: {{ p_date_created | date }}<br>\r\n                                    TO BRANCH: {{ p_br_code_in }}\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n            <!-- Main content -->\r\n        <div class=\"content-wrapper  col-sm-12\" >\r\n            <div class=\"panel panel-flat\">\r\n                <div class=\"panel-heading\">\r\n                    <p class=\"panel-title\">Item Scanned</p>\r\n                </div>\r\n\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Item name</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                             <tr v-for=\"(row, i) in temporary_items\" :key=\"i\">\r\n                                <td> {{row.item_name }} <br>  \r\n                                QTY -> {{row.qty }} <br>\r\n                                UOM -> {{row.uom }} </td>\r\n                                <td> \r\n                                    <button class=\"btn btn-danger btn-sm\" v-on:click=\"delete_items(row.temp_receiving_id, row.id)\"><i class=\"icon-cancel-circle2\"></i></button>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <p v-show=\"loading_barcode\" class=\"pull-center\" >\r\n                                        <i class=\"icon-spinner4 spinner position-left\"></i> PLEASE WAIT ..\r\n                                    </p>\r\n                                    <button v-on:click=\"openscan()\" v-show=\"deviceScan\" class=\"btn btn-info btn-xs pull-left\" style=\"border-radius:0px;\">CLICK TO SCAN BARCODE</button>\r\n                                    <input class=\"form-control\" placeholder=\"Enter Barcode\" id=\"item_barcode\" v-model=\"p_barcode\" v-on:keyup.13=\"fetch_barcode\">\r\n                                </td>\r\n                                <td><input  style=\"text-align:left;\" class=\"form-control\"  v-model=\"p_qty\"></td>\r\n                            <tr>\r\n                            <tr>\r\n                                <td style=\"text-align:center !important\">SKU SCANNED: {{ total_sku }}</td>\r\n                                <td style=\"text-align:center !important\">SKU REMAINING:  {{ total_sku_remaining }}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style=\"text-align:center !important\">TOTAL QTY SCANNED:  {{ total_qty_scanned }}</td>\r\n                                <td style=\"text-align:center !important\">REMAINING ITEMS:  {{ total_remaining_item }}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style=\"text-align:center !important\">TOTAL PO QTY POSTED:  {{ total_qty_receive }}</td>\r\n                                <td style=\"text-align:center !important\">TOTAL PO QTY: {{ total_qty_ordered }}</td>\r\n                            </tr>\r\n                           <tr>\r\n                            <td colspan=\"4\">\r\n                                    <textarea name=\"\" id=\"\" class=\"form-control\" placeholder=\"Remarks\" v-model=\"p_remarks\"></textarea>\r\n                                </td>\r\n                            <tr>\r\n                                <td colspan=\"4\">\r\n                                  <input class=\"form-control\" style=\"text-align:left;\" multiple id=\"file\" ref=\"file\"  v-on:change=\"handleFileUpload()\" type=\"file\" >\r\n                                  ( Maaring Mag upload ng Multipe Scan Invoice Kung ito ay IMAGE file ) <br>\r\n                                  ( Kung Ito naman ay pdf file isa lang ang maaring mong ma upload )\r\n                                </td>\r\n                            <tr>\r\n                            <tr>\r\n                                <td colspan=\"4\">\r\n                                    <button type=\"button\" :disabled=\"btn_post\" class=\"btn btn-sm btn-primary col-xs-12\" v-on:click=\"post_receiving()\">\r\n                                        <div v-if=\"loading_post\">\r\n                                            <i class=\"icon-spinner4 spinner position-left\"></i> PLEASE WAIT ..\r\n                                        </div>\r\n                                        <div v-if=\"!loading_post\">\r\n                                            <i class=\"icon-checkmark\"></i> POST\r\n                                        </div>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- End Main content -->\r\n <!-- last item  -->\r\n        <div class=\"content-wrapper col-sm-12\" >\r\n            <div class=\"panel panel-flat\">\r\n                <div class=\"panel-heading\">\r\n                    <p class=\"panel-title\">LAST ITEM SCANNED</p>\r\n                    <div class=\"heading-elements\">\r\n                        <ul class=\"icons-list\">\r\n                            <li><a data-action=\"collapse\"></a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ITEM NAME</th>\r\n                                <th>UOM</th>\r\n                                <th>REMAINING QTY</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr v-for=\"(row, i) in last_item_scanned\" :key=\"i\">\r\n                                <td> {{row.description }} </td>\r\n                                <td> {{row.uom }} </td>\r\n                                <td> {{row.remaining }} </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- last item  -->\r\n        <!-- Main content -->\r\n        <div class=\"content-wrapper col-sm-12\" >\r\n            <div class=\"panel panel-flat\">\r\n                <div class=\"panel-heading\">\r\n                    <p class=\"panel-title\">ITEMS FOR TRANSFER</p>\r\n                    <div class=\"heading-elements\">\r\n                        <ul class=\"icons-list\">\r\n                            <li><a data-action=\"collapse\"></a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Item name</th>\r\n                                <th>Qty</th>\r\n                                <th>UOM</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr v-for=\"(row, i) in receive_items\" :key=\"i\">\r\n                                <td v-if=\"row.actual_qty_out != row.qty_scanned && row.actual_qty_out != 0\"> {{row.description }} </td>\r\n                                <td v-if=\"row.actual_qty_out != row.qty_scanned && row.actual_qty_out != 0\"> {{row.actual_qty_out - row.qty_scanned}} </td>\r\n                                <td v-if=\"row.actual_qty_out != row.qty_scanned && row.actual_qty_out != 0\"> {{row.uom }} </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { msgError, apiUrl, msgSuccess, tokenApi, getSessionCurrentUrl} from './../../../assets/custom/custom.js'\r\n\r\nexport default {\r\n    data(){\r\n        return {\r\n            file: '',\r\n            p_checked_by: '',\r\n            p_delivered_by: '',\r\n            p_requested_by: '',\r\n            p_delivery_date: '',\r\n            p_date_created: '',\r\n            p_br_code_out: '',\r\n            p_br_code_in: '',\r\n            p_remarks: '',\r\n            p_qty: 1,\r\n            p_barcode: '',\r\n            p_transfer_no: this.$route.query.transfer_id,\r\n            total_sku: 0,\r\n            total_qty_receive: 0,\r\n            total_qty_ordered: 0,\r\n            total_qty_scanned: 0,\r\n            total_sku_remaining: 0,\r\n            total_remaining_item: 0,\r\n            loading_po: false,\r\n            loading_barcode: false,\r\n            temporary_items: [],\r\n            loading_receive_details: false,\r\n            btn_post: true,\r\n            loading_post: false,\r\n            deviceScan: false,\r\n            list_receive_transfer_details: [],\r\n            list_receive_transfer_details_temp: [],\r\n            receive_items: [],\r\n            last_item_scanned: []\r\n        }\r\n    },\r\n    async mounted(){\r\n      await this.getPlatform()\r\n      await this.fetch_receive_transfer_details()\r\n      await this.fetch_temporary_items(this.p_transfer_no)\r\n      getSessionCurrentUrl(this, 'TransferReceive')\r\n    },\r\n    methods:{\r\n        async openscan(){\r\n            window.qsprint.openscan()\r\n        },\r\n        async fetch_barcode() {\r\n            this.loading_barcode = true //activate loading\r\n            try {\r\n                let data  = {\r\n                    p_barcode: $('#item_barcode').val(),\r\n                    p_qty: this.p_qty,\r\n                    p_transfer_no: this.p_transfer_no\r\n                }\r\n                await axios.post(apiUrl('purchaser/receive_po/transfer/receive/fetch_barcode'), data, tokenApi())\r\n                await this.fetch_temporary_items(this.p_transfer_no)\r\n            } catch (error) {\r\n                await this.handdleError(error)\r\n            }\r\n            this.p_barcode = \"\"\r\n            this.p_qty = 1\r\n            this.loading_barcode = false //deactivate loading\r\n        },\r\n        async fetch_temporary_items(transfer_id) {\r\n            try {\r\n                let query  = {\r\n                    params: {\r\n                        p_transfer_no: transfer_id\r\n                    },\r\n                    headers: tokenApi('token', 'header')\r\n                }\r\n                let result = await axios.get(apiUrl('purchaser/receive_po/transfer/receive/fetch_temporary_items'), query)\r\n                let data   = result.data\r\n                this.btn_post       = (data.temporary_items.length == 0) ? true : false\r\n                this.receive_items = data.receive_items\r\n                this.temporary_items= data.temporary_items\r\n    \r\n                this.total_sku           = data.total_sku\r\n                this.total_qty_receive   = data.total_qty_receive\r\n                this.total_qty_ordered   = data.total_qty_ordered\r\n                this.total_qty_scanned   = data.total_qty_scanned\r\n                this.total_sku_remaining = data.receive_items.length - data.total_all_sku\r\n                this.total_remaining_item= data.total_qty_ordered - data.total_qty_scanned\r\n                this.last_item_scanned = data.last_item_scanned\r\n            } catch (error) {\r\n                await this.handdleError(error)\r\n            }\r\n        },\r\n        async delete_items(temp_receiving_id, id) {\r\n            try {\r\n                let confirm = window.confirm('Confirm delete');\r\n                if(confirm) {\r\n                    let data = {\r\n                        p_temp_id: temp_receiving_id,\r\n                        p_transfer_no: this.p_transfer_no, \r\n                        p_id: id\r\n                    }\r\n                    await axios.post(apiUrl('purchaser/receive_po/transfer/receive/delete_items'), data, tokenApi())\r\n                    await this.fetch_temporary_items(this.p_transfer_no)\r\n                    msgSuccess(200, \"Successfully deleted items\")\r\n                }\r\n            } catch (error) {\r\n                this.handdleError(error)\r\n            }\r\n            \r\n        },\r\n        async fetch_receive_transfer_details(){\r\n           this.loading_receive_details = true //activate loading\r\n            try {\r\n                let query   = {\r\n                    params: {\r\n                        p_transfer_no: this.p_transfer_no\r\n                    },\r\n                    headers: tokenApi('token', 'header')\r\n                }\r\n                let result  = await axios.get(apiUrl('purchaser/receive_po/transfer/receive/fetch_receive_transfer_details'), query)\r\n                let data    = result.data\r\n                this.p_requested_by   = data.transfer.requested_by\r\n                this.p_delivery_date  = data.transfer.delivery_date\r\n                this.p_date_created   = data.transfer.date_created\r\n                this.p_br_code_out    = data.transfer.br_code_out\r\n                this.p_br_code_in     = data.transfer.br_code_in\r\n            } catch (error) {\r\n                await this.handdleError(error)\r\n            }\r\n            this.loading_receive_details = false //deactivate loading\r\n        },\r\n        async post_receiving() {\r\n            try {\r\n                let formData = new FormData()\r\n                // if (this.file == \"\") {\r\n                //     return msgError(401, \"Invoice file is required\")\r\n                // }\r\n                this.btn_post = true\r\n                this.loading_post = true\r\n                 for (let i = 0; i < this.file.length; i++) {\r\n                    let file = this.file[i]\r\n                    formData.append('file[' + i + ']', file);\r\n                }\r\n                formData.append('p_remarks', this.p_remarks)\r\n                formData.append('p_transfer_no', this.p_transfer_no)\r\n                await axios.post(apiUrl('purchaser/receive_po/transfer/receive/post_receiving'), formData, tokenApi())\r\n                this.$session.flash.set('p_message', 'OK')\r\n                this.$router.push({ name: 'TransferReceive' })\r\n                await this.refresh()\r\n\r\n            } catch (error) {\r\n                this.handdleError(error)\r\n            }\r\n            this.btn_post = false\r\n            this.loading_post = false\r\n        },\r\n        async handleFileUpload() {\r\n            this.file = this.$refs.file.files;\r\n        },\r\n        async refresh() {\r\n            let input = this.$refs.file;\r\n            input.type = 'text';\r\n            input.type = 'file';\r\n            this.file          = ''\r\n            this.p_requested_by = ''\r\n            this.p_delivery_date = ''\r\n            this.p_date_created = ''\r\n            this.p_br_code_out = ''\r\n            this.p_br_code_in = ''\r\n            this.p_qty = 1\r\n            this.p_barcode = ''\r\n            this.p_transfer_no = this.$route.query.transfer_id\r\n            this.total_sku = 0\r\n            this.total_qty_receive = 0\r\n            this.total_qty_ordered = 0\r\n            this.total_qty_scanned = 0\r\n            this.total_sku_remaining = 0\r\n            this.total_remaining_item = 0\r\n            this.loading_po = false\r\n            this.loading_barcode = false\r\n            this.temporary_items = []\r\n            this.loading_receive_details = false\r\n            this.list_receive_transfer_details = []\r\n            this.list_receive_transfer_details_temp = []\r\n            this.receive_items = []\r\n        },\r\n        async handdleError(error=null){\r\n            if (error != null) {\r\n                const response = JSON.parse(JSON.stringify(error))\r\n                const status = response.response.status.toString()\r\n                const message = (response.response.data.error === undefined) ? response.response.data.message : response.response.data.error.message\r\n                msgError(status, message)\r\n                return true\r\n            }\r\n                msgError(401, \"Something Wrong\")\r\n        },\r\n        async  getPlatform() {\r\n          let platform = [\"Win32\", \"Android\", \"iOS\", \"Linux armv8l\"];\r\n          for (let i = 0; i < platform.length; i++) {\r\n              if (navigator.platform.indexOf(platform[i]) >- 1) {\r\n                if(platform[i] == 'Linux armv8l') {\r\n                  this.deviceScan = true\r\n                }\r\n              }\r\n          }\r\n        }\r\n\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\nth,td {\r\n  padding: 10px !important;\r\n  font-size: 10px;\r\n  text-align: center !important;\r\n}\r\n</style>\r\n"]}]}