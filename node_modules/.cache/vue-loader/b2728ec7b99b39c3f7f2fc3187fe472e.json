{"remainingRequest":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\src\\components\\transfer_community_palengke\\make_request\\MakeRequestTransfer.vue?vue&type=style&index=0&id=7a0f3738&scoped=true&lang=css&","dependencies":[{"path":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\src\\components\\transfer_community_palengke\\make_request\\MakeRequestTransfer.vue","mtime":1616123095655},{"path":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nth,td {\r\n  padding: 10px !important;\r\n  font-size: 10px;\r\n  text-align: center !important;\r\n}\r\n",{"version":3,"sources":["MakeRequestTransfer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+QA;AACA;AACA;AACA;AACA","file":"MakeRequestTransfer.vue","sourceRoot":"src/components/transfer_community_palengke/make_request","sourcesContent":["<template>\r\n    <div class=\"panel-body\">\r\n       \r\n        <!-- Main content -->\r\n        <div class=\"content-wrapper col-sm-12\" >\r\n            \r\n            <div class=\"panel panel-flat\">\r\n                <div class=\"panel-heading\">\r\n                    <p class=\"panel-title\">REQUEST ITEMS PL# {{ pl_no }}</p>\r\n                    <p class=\"panel-title\"> \r\n                      <select class=\"form-control\" v-model=\"v_code\" v-on:change=\"fetch_temporary_items()\">\r\n                        <option value=\"\"> SELECT COMMUNITY PALENGKE</option>\r\n                        <option v-for=\"(row, i) in branches\" :key=\"i\" :value=\"row.code\"> {{ row.branch_name }} </option>\r\n                      </select>\r\n                    </p>\r\n                    <div class=\"heading-elements\">\r\n                        <ul class=\"icons-list\">\r\n                            <li><a data-action=\"collapse\"></a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n\r\n            <!-- Main content -->\r\n        <div class=\"content-wrapper  col-sm-12\" >\r\n            <div class=\"panel panel-flat\">\r\n                <div class=\"panel-heading\">\r\n                    <p class=\"panel-title\">Item Scanned</p>\r\n                </div>\r\n\r\n                <div class=\"table-responsive\">\r\n                    <div v-if=\"p_message == 'OK'\">\r\n                        <div class=\"alert alert-success\" style=\"border-radius:0px;\"><h2>SUCCESSFULLY POSTED </h2></div>\r\n                    </div>\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Item name</th>\r\n                                <th></th>\r\n                                <!-- <th></th> -->\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr v-for=\"(row, i) in temporary_items\" :key=\"i\">\r\n                                <td> {{row.description }} <br>  \r\n                                QTY -> {{row.qty_out }} <br>\r\n                                UOM -> {{row.uom }} </td>\r\n                                <td> \r\n                                    <button class=\"btn btn-danger btn-sm\" v-on:click=\"delete_items(row.transfer_id, row.id)\"><i class=\"icon-cancel-circle2\"></i></button>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <p v-show=\"loading_barcode\" class=\"pull-center\" >\r\n                                        <i class=\"icon-spinner4 spinner position-left\"></i> PLEASE WAIT ..\r\n                                    </p>\r\n                                    <button v-on:click=\"openscan()\" v-show=\"deviceScan\" class=\"btn btn-info btn-xs pull-left\" style=\"border-radius:0px;\">CLICK TO SCAN BARCODE</button>\r\n                                    <input class=\"form-control\" placeholder=\"Enter Barcode\"  id=\"item_barcode\" v-model=\"p_barcode\" v-on:keyup.13=\"fetch_barcode\">\r\n                                </td>\r\n                                <!-- <td>\r\n                                  <select v-model=\"p_uom\" id=\"p_uom\" class=\"col-sm-12 form-control input-sm\">\r\n                                      <option value=\"\"> -- UOM -- </option>\r\n                                      <option v-bind:value=\"row.a1\" v-for=\"(row, i) in list_uoms\" :key=\"i\"> {{ row.a1 }}</option>\r\n                                  </select>\r\n                                </td> -->\r\n                                <td><input  style=\"text-align:left;\" class=\"form-control\"  v-model=\"p_qty\"></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td colspan=\"2\" style=\"text-align:center !important\">TOTAL QTY SCANNED:  {{ total_qty_scanned }}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td colspan=\"4\">\r\n                                    <button type=\"button\" :disabled=\"btn_post\" class=\"btn btn-sm btn-primary col-xs-12\" v-on:click=\"post_receiving()\">\r\n                                        <div v-if=\"loading_post\">\r\n                                            <i class=\"icon-spinner4 spinner position-left\"></i> PLEASE WAIT ..\r\n                                        </div>\r\n                                        <div v-if=\"!loading_post\" >\r\n                                            <i class=\"icon-checkmark\"></i> POST\r\n                                        </div>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- End Main content -->\r\n\r\n        <!-- Main content -->\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { msgError, apiUrl, msgSuccess, tokenApi, getSessionCurrentUrl } from './../../../assets/custom/custom.js'\r\n\r\nexport default {\r\n    data(){\r\n        return {\r\n            p_message: this.$session.flash.get('p_message'),\r\n            p_checked_by: '',\r\n            pl_no: 0,\r\n            p_delivered_by: '',\r\n            p_requested_by: '',\r\n            p_delivery_date: '',\r\n            p_date_created: '',\r\n            p_br_code_out: '',\r\n            p_br_code_in: '',\r\n            p_qty: 1,\r\n            p_barcode: '',\r\n            p_transfer_no: '',\r\n            total_sku: 0,\r\n            total_qty_receive: 0,\r\n            total_qty_ordered: 0,\r\n            total_qty_scanned: 0,\r\n            total_sku_remaining: 0,\r\n            total_remaining_item: 0,\r\n            loading_po: false,\r\n            loading_barcode: false,\r\n            btn_post: true,\r\n            loading_post: false,\r\n            deviceScan: false,\r\n            temporary_items: [],\r\n            loading_dispatch_details: false,\r\n            list_dispatch_transfer_details: [],\r\n            list_dispatch_transfer_details_temp: [],\r\n            dispatch_items: [],\r\n            last_item_scanned: [],\r\n            p_username: '',\r\n            list_uoms: [],\r\n            branches: [],\r\n            p_uom: '',\r\n            p_password: '',\r\n            v_code: 'srssananacp',\r\n            isVisor: (this.$session.get('level')) ? (this.$session.get('level') == 3) ? true : false : false\r\n        }\r\n    },\r\n    async mounted(){\r\n      await this.getPlatform()\r\n      // await this.fetch_list_uom()\r\n      await this.fetch_temporary_items()\r\n      getSessionCurrentUrl(this, 'TransferCommunityPalengkeMakeRequest')\r\n    },\r\n    methods:{\r\n        async openscan(){\r\n            window.qsprint.openscan()\r\n        },\r\n        async fetch_barcode() {\r\n            this.loading_barcode = true //activate loading\r\n            try {\r\n                let data  = {\r\n                    p_barcode: $('#item_barcode').val(),\r\n                    p_qty: this.p_qty,\r\n                    p_transfer_no: this.p_transfer_no,\r\n                    p_uom: this.p_uom,\r\n                    p_code: this.v_code\r\n                }\r\n                await axios.post(apiUrl('purchaser/receive_po/transfer-community-palengke/request/fetch_barcode'), data, tokenApi())\r\n                await this.fetch_temporary_items(this.p_transfer_no)\r\n            } catch (error) {\r\n                await this.handdleError(error)\r\n            }\r\n            this.p_barcode = \"\"\r\n            this.p_qty = 1\r\n            this.loading_barcode = false //deactivate loading\r\n        },\r\n        async fetch_temporary_items() {\r\n            try {\r\n                let query  = {\r\n                    headers: tokenApi('token', 'header'),\r\n                    params: { \r\n                      v_code: this.v_code\r\n                    }\r\n                }\r\n                let result = await axios.get(apiUrl('purchaser/receive_po/transfer-community-palengke/request/fetch_temporary_items'), query)\r\n                let data   = result.data\r\n                this.btn_post       = (data.temporary_items.length == 0) ? true : false\r\n                this.temporary_items= data.temporary_items\r\n                this.pl_no = data.pl_no\r\n                this.p_transfer_no = data.pl_no\r\n                this.branches = data.branches\r\n               \r\n            } catch (error) {\r\n                await this.handdleError(error)\r\n            }\r\n        },\r\n        async delete_items(temp_receiving_id, id) {\r\n            try {\r\n                let confirm = window.confirm('Confirm delete');\r\n                if(confirm) {\r\n                    let data = {\r\n                        p_temp_id: temp_receiving_id,\r\n                        p_id: id\r\n                    }\r\n                    let result = await axios.post(apiUrl('purchaser/receive_po/transfer-community-palengke/request/delete_items'), data, tokenApi())\r\n                    let res   = result.data\r\n                    await this.fetch_temporary_items()\r\n                    msgSuccess(200, \"Successfully deleted items\")\r\n                    if (res.count_items == 1) {\r\n                        await this.refresh()\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                this.handdleError(error)\r\n            }\r\n            \r\n        },\r\n        async post_receiving() {\r\n            this.btn_post = true\r\n            this.loading_post = true\r\n            try {\r\n                let data = {\r\n                  temp_id: this.pl_no\r\n                }\r\n                await axios.post(apiUrl('purchaser/receive_po/transfer-community-palengke/request/post_receiving'), data, tokenApi())\r\n                this.$session.flash.set('p_message', 'OK')\r\n                this.$router.push({ name: 'TransferCommunityPalengkeMakeRequest' })\r\n                location.reload()\r\n                await this.refresh()\r\n\r\n            } catch (error) {\r\n                this.handdleError(error)\r\n            }\r\n            this.btn_post = false\r\n            this.loading_post = false\r\n        },\r\n        async refresh() {\r\n          \r\n        },\r\n        async handdleError(error=null){\r\n            if (error != null) {\r\n                const response = JSON.parse(JSON.stringify(error))\r\n                const status = response.response.status.toString()\r\n                const message = (response.response.data.error === undefined) ? response.response.data.message : response.response.data.error.message\r\n                msgError(status, message)\r\n                return true\r\n            }\r\n                msgError(401, \"Something Wrong\")\r\n        },\r\n        async  getPlatform() {\r\n          let platform = [\"Win32\", \"Android\", \"iOS\", \"Linux armv8l\"];\r\n          for (let i = 0; i < platform.length; i++) {\r\n              if (navigator.platform.indexOf(platform[i]) >- 1) {\r\n                if(platform[i] == 'Linux armv8l') {\r\n                  this.deviceScan = true\r\n                }\r\n              }\r\n          }\r\n        },\r\n        async fetch_list_uom(){\r\n          try {\r\n              let query = {\r\n                  headers: tokenApi('token', 'header')\r\n              }\r\n              let result = await axios.get(apiUrl('purchaser/receive_po/op/variable/fetch_list_uom'), query)\r\n              let data   = result.data\r\n              this.list_uoms = data.list_uoms\r\n          } catch (error) {\r\n              await this.handdleError(error)\r\n          }\r\n      },\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\nth,td {\r\n  padding: 10px !important;\r\n  font-size: 10px;\r\n  text-align: center !important;\r\n}\r\n</style>\r\n"]}]}