{"remainingRequest":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\src\\components\\transfer\\dispatch\\DispatchTransfer.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\src\\components\\transfer\\dispatch\\DispatchTransfer.vue","mtime":1628578651233},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport axios from 'axios';\r\nimport { msgError,  apiUrl, tokenApi, getSessionCurrentUrl } from './../../../assets/custom/custom.js'\r\n\r\nexport default {\r\n    data () {\r\n        return {\r\n            p_message: this.$session.flash.get('p_message'),\r\n            p_transfer_no: '',\r\n            loading_dispatch: true,\r\n            list_dispatch_transfer: [],\r\n            page_count: 0,\r\n            page: 0,\r\n            pagination: 'pagination',\r\n            prev: 'PREV',\r\n            next: 'NEXT',\r\n        }\r\n    },\r\n    async mounted(){\r\n        await this.fetch_dispatch_transfer()\r\n        getSessionCurrentUrl(this, 'TransferDispatch')\r\n    },\r\n    methods: {\r\n        async fetch_dispatch_transfer(page=1) {\r\n            this.loading_dispatch = true //activate loading\r\n            try {\r\n                let query   = {\r\n                    params: {\r\n                        p_page: page,\r\n                        p_transfer_no: this.p_transfer_no\r\n                    },\r\n                    headers: tokenApi('token', 'header')\r\n                }\r\n                let result  = await axios.get(apiUrl('purchaser/receive_po/transfer/dispatch/fetch_dispatch_transfer'), query)\r\n                let data    = result.data\r\n                this.list_dispatch_transfer = data.list_dispatch_transfers\r\n                this.page_count           = data.page_count\r\n            } catch (error) {\r\n                await this.handdleError(error)\r\n            }\r\n            this.loading_dispatch = false //deactivate loading\r\n        },\r\n        async view_dispatch(transfer_id) {\r\n            this.$router.push({ name: 'TransferDispatchView', query: { transfer_id } })\r\n        },\r\n        async receive_dispatch(transfer_id) {\r\n            this.$router.push({ name: 'TransferDispatchReceive', query: { transfer_id } })\r\n        },\r\n        async receive_dispatch_auto_save(transfer_id) {\r\n            this.$router.push({ name: 'TransferDispatchAutoSave', query: { transfer_id } })\r\n        },\r\n        async handdleError(error=null) {\r\n            if (error != null) {\r\n                const response = JSON.parse(JSON.stringify(error))\r\n                const status = response.response.status.toString()\r\n                const message = (response.response.data.error === undefined) ? response.response.data.message : response.response.data.error.message\r\n                msgError(status, message)\r\n                return true\r\n            }\r\n                msgError(401, \"Something Wrong\")\r\n        }\r\n    }\r\n}\r\n\r\n",{"version":3,"sources":["DispatchTransfer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DispatchTransfer.vue","sourceRoot":"src/components/transfer/dispatch","sourcesContent":["<template>\r\n    <div class=\"panel-body\">\r\n        <!-- Main content -->\r\n        <div class=\"content-wrapper col-sm-12\" >\r\n            <div class=\"panel panel-flat\">\r\n                <div class=\"panel-heading\">\r\n                    <p class=\"panel-title\">DISPATCH TRANSFER LIST</p>\r\n                    <div class=\"heading-elements\">\r\n                        <ul class=\"icons-list\">\r\n                            <li><a data-action=\"collapse\"></a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"table-responsive\">\r\n                    <div v-if=\"p_message == 'OK'\">\r\n                        <div class=\"alert alert-success\" style=\"border-radius:0px;\"><h2>SUCCESSFULLY POSTED </h2></div>\r\n                    </div>\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr v-show=\"loading_dispatch\">\r\n                                <th colspan=\"5\"  style=\"text-align:center\">\r\n                                    <p>\r\n                                        <i class=\"icon-spinner4 spinner position-left\"></i> PLEASE WAIT ..\r\n                                    </p>\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <td colspan=\"5\">\r\n                                    <input type=\"text\" class=\"form-control\" v-model=\"p_transfer_no\" v-on:keyup=\"fetch_dispatch_transfer()\" placeholder=\"SEARCH #: 1235\">\r\n                                </td>\r\n                            </tr>\r\n                            <tr v-show=\"!loading_dispatch\" v-for=\"(row, i) in list_dispatch_transfer\" :key=\"i\">\r\n                                <th style=\"text-align:center\">#: {{ row.id }} <br>\r\n                                  TO: {{ row.name }}<br>\r\n                                  DELIVERY DATE {{ row.delivery_date | date }}<br>\r\n                                  <a v-on:click=\"view_dispatch(row.id)\">VIEW</a><br>\r\n                                  <a v-if=\"row.auto !== 2\" v-on:click=\"receive_dispatch(row.id)\">DISPATCH</a>\r\n                                  <a v-else v-on:click=\"receive_dispatch_auto_save(row.id)\">DISPATCH GULAY AUTO SAVE</a>\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <td colspan=\"3\" align=\"center\">\r\n                                        <paginate\r\n                                        :page-count=\"page_count\"\r\n                                        :container-class=\"pagination\"\r\n                                        :prev-text=\"prev\"\r\n                                        :next-text=\"next\"\r\n                                        :click-handler=\"fetch_dispatch_transfer\">\r\n                                    </paginate>\r\n                                </td>\r\n                            </tr>\r\n                        </thead>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { msgError,  apiUrl, tokenApi, getSessionCurrentUrl } from './../../../assets/custom/custom.js'\r\n\r\nexport default {\r\n    data () {\r\n        return {\r\n            p_message: this.$session.flash.get('p_message'),\r\n            p_transfer_no: '',\r\n            loading_dispatch: true,\r\n            list_dispatch_transfer: [],\r\n            page_count: 0,\r\n            page: 0,\r\n            pagination: 'pagination',\r\n            prev: 'PREV',\r\n            next: 'NEXT',\r\n        }\r\n    },\r\n    async mounted(){\r\n        await this.fetch_dispatch_transfer()\r\n        getSessionCurrentUrl(this, 'TransferDispatch')\r\n    },\r\n    methods: {\r\n        async fetch_dispatch_transfer(page=1) {\r\n            this.loading_dispatch = true //activate loading\r\n            try {\r\n                let query   = {\r\n                    params: {\r\n                        p_page: page,\r\n                        p_transfer_no: this.p_transfer_no\r\n                    },\r\n                    headers: tokenApi('token', 'header')\r\n                }\r\n                let result  = await axios.get(apiUrl('purchaser/receive_po/transfer/dispatch/fetch_dispatch_transfer'), query)\r\n                let data    = result.data\r\n                this.list_dispatch_transfer = data.list_dispatch_transfers\r\n                this.page_count           = data.page_count\r\n            } catch (error) {\r\n                await this.handdleError(error)\r\n            }\r\n            this.loading_dispatch = false //deactivate loading\r\n        },\r\n        async view_dispatch(transfer_id) {\r\n            this.$router.push({ name: 'TransferDispatchView', query: { transfer_id } })\r\n        },\r\n        async receive_dispatch(transfer_id) {\r\n            this.$router.push({ name: 'TransferDispatchReceive', query: { transfer_id } })\r\n        },\r\n        async receive_dispatch_auto_save(transfer_id) {\r\n            this.$router.push({ name: 'TransferDispatchAutoSave', query: { transfer_id } })\r\n        },\r\n        async handdleError(error=null) {\r\n            if (error != null) {\r\n                const response = JSON.parse(JSON.stringify(error))\r\n                const status = response.response.status.toString()\r\n                const message = (response.response.data.error === undefined) ? response.response.data.message : response.response.data.error.message\r\n                msgError(status, message)\r\n                return true\r\n            }\r\n                msgError(401, \"Something Wrong\")\r\n        }\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\ninput, textarea{\r\n  border-radius: 0px !important;\r\n   font-size: 10px !important;\r\n   text-align:center;\r\n   resize: none;\r\n}\r\n.btn {\r\n    border-radius: 0px;\r\n}\r\n</style>\r\n"]}]}