{"remainingRequest":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\src\\components\\receive_po_free\\ReceivePoFree.vue?vue&type=style&index=0&id=7d1ac724&scoped=true&lang=css&","dependencies":[{"path":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\src\\components\\receive_po_free\\ReceivePoFree.vue","mtime":1585935380908},{"path":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\node-projects\\Receiving\\franchisee\\api_vue_receiving\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\ninput, textarea {\r\n  border-radius: 0px !important;\r\n   font-size: 10px !important;\r\n   text-align:center;\r\n   resize: none;\r\n}\r\n.btn {\r\n    border-radius: 0px;\r\n}\r\nth,td {\r\n  padding: 10px !important;\r\n  font-size: 10px;\r\n  text-align: center !important;\r\n}\r\n.title{\r\n    text-align:center;\r\n}\r\n",{"version":3,"sources":["ReceivePoFree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ReceivePoFree.vue","sourceRoot":"src/components/receive_po_free","sourcesContent":["<template>\r\n    \r\n   <div class=\"panel-body\">\r\n        <!-- Main content -->\r\n    <div class=\"content-wrapper  col-sm-12\">\r\n        <div class=\"panel panel-flat\">\r\n            <div class=\"table-responsive\">\r\n                <div v-if=\"receiving_no != ''\">\r\n                    <div class=\"alert alert-success\" style=\"border-radius:0px;\"><h2>SUCCESSFULLY POSTED. </h2></div>\r\n                </div>\r\n               <p class=\"text-center\"> (RECEIVE FREE GOODS)</p>\r\n                <table class=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <input type=\"hidden\" v-model=\"p_order_no\">\r\n                            <input type=\"hidden\" v-model=\"p_temp_id\">\r\n                            <th>\r\n                                <p v-show=\"loading_po\" class=\"pull-left\" >\r\n                                    <i class=\"icon-spinner4 spinner position-left\"></i> PLEASE WAIT ..\r\n                                </p>\r\n                                <input type=\"text\" id=\"p_po\" class=\"col-sm-12 form-control input-sm\" v-model=\"p_po\" v-on:keyup.13=\"fetch_po\" placeholder=\"P.O #\">\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th><input type=\"text\" class=\"col-sm-6 col-xs-12 form-control  input-sm\" v-model=\"p_inv_no\" placeholder=\"INVOICE #\"></th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>{{ supplier_name }}</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>{{ date_now }}</th>\r\n                        </tr>\r\n                    </thead>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Main content -->\r\n    <div class=\"content-wrapper  col-sm-12\" v-if=\"supplier_name != ''\">\r\n        <div class=\"panel panel-flat\">\r\n            <div class=\"panel-heading\">\r\n                <p class=\"panel-title\">ITEM SCANNED</p>\r\n            </div>\r\n\r\n            <div class=\"table-responsive\">\r\n                <table class=\"table table-bordered\">\r\n                    <thead>\r\n                         <tr>\r\n                            <th width=\"50%;\">ITEM NAME</th>\r\n                            <th width=\"50%;\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr v-for=\"(row, i) in temporary_items\" :key=\"i\">\r\n                            <td> {{row.item_name }} <br>  \r\n                            QTY -> {{row.qty }} <br>\r\n                            UOM -> {{row.uom }} </td>\r\n                            <td> \r\n                                <button class=\"btn btn-danger btn-sm\" v-on:click=\"delete_items(row.temp_receiving_id, row.id)\"><i class=\"icon-cancel-circle2\"></i></button>\r\n                            </td>\r\n                        </tr>\r\n                         <tr>\r\n                            <td>\r\n                                <p v-show=\"loading_barcode\" class=\"pull-left\" >\r\n                                    <i class=\"icon-spinner4 spinner position-left\"></i> PLEASE WAIT ..\r\n                                </p>\r\n                                <button v-on:click=\"openscan()\" v-show=\"deviceScan\" class=\"btn btn-info btn-xs pull-left\" style=\"border-radius:0px;\">CLICK TO SCAN BARCODE</button>\r\n                                <input class=\"form-control\" placeholder=\"Enter Barcode\" id=\"item_barcode\" v-model=\"p_barcode\" v-on:keyup.13=\"fetch_barcode\">\r\n                            </td>\r\n                            <td><input  class=\"form-control\"  v-model=\"p_qty\"></td>\r\n                        <tr>\r\n                        <tr>\r\n                            <td style=\"text-align:center !important\">SKU SCANNED: {{ total_sku }}</td>\r\n                            <td style=\"text-align:center !important\">SKU REMAINING:  {{ total_sku_remaining }}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td style=\"text-align:center !important\">TOTAL QTY SCANNED:  {{ total_qty_scanned }}</td>\r\n                            <td style=\"text-align:center !important\">REMAINING ITEMS:  {{ total_remaining_item }}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td style=\"text-align:center !important\">TOTAL PO QTY POSTED:  {{ total_qty_receive }}</td>\r\n                            <td style=\"text-align:center !important\">TOTAL PO QTY: {{ total_qty_ordered }}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colspan=\"4\">\r\n                                <textarea name=\"\" id=\"\" class=\"form-control\" placeholder=\"Remarks\" v-model=\"p_remarks\"></textarea>\r\n                            </td>\r\n                        <tr>\r\n                            <td colspan=\"4\">\r\n                              <input class=\"form-control\" multiple style=\"text-align:left;\" id=\"file\" ref=\"file\"  v-on:change=\"handleFileUpload()\" type=\"file\" >\r\n                              ( Maaring Mag upload ng Multipe Scan Invoice Kung ito ay IMAGE file ) <br>\r\n                              ( Kung Ito naman ay pdf file isa lang ang maaring mong ma upload )\r\n                            </td>\r\n                        <tr>\r\n                        <tr>\r\n                            <td colspan=\"4\">\r\n                                <button type=\"button\" :disabled=\"btn_post\" class=\"btn btn-sm btn-primary col-xs-12\" v-on:click=\"post_receiving()\">\r\n                                    <div v-if=\"loading_post\">\r\n                                        <i class=\"icon-spinner4 spinner position-left\"></i> PLEASE WAIT ..\r\n                                    </div>\r\n                                    <div v-if=\"!loading_post\">\r\n                                        <i class=\"icon-checkmark\"></i> POST\r\n                                    </div>\r\n                                </button>\r\n                            </td>\r\n                        </tr> \r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Main content -->\r\n    <div class=\"content-wrapper col-sm-12\" v-if=\"supplier_name != ''\">\r\n        <div class=\"panel panel-flat\">\r\n            <div class=\"panel-heading\">\r\n                <p class=\"panel-title\">PO ITEMS</p>\r\n                <div class=\"heading-elements\">\r\n                    <ul class=\"icons-list\">\r\n                        <li><a data-action=\"collapse\"></a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"table-responsive\">\r\n                <table class=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ITEM NAME</th>\r\n                            <th>QTY</th>\r\n                            <th>UOM</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr v-for=\"(row, i) in po_items\" :key=\"i\">\r\n                            <td v-if=\"row.ord_qty != row.qty_scanned\"> {{row.description }} </td>\r\n                            <td v-if=\"row.ord_qty != row.qty_scanned\"> {{row.ord_qty - row.qty_scanned }} </td>\r\n                            <td v-if=\"row.ord_qty != row.qty_scanned\"> {{row.unit_id }} </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        \r\n    </div>\r\n\r\n\r\n</template>\r\n<script>\r\n\r\n</script>\r\n<script>\r\nimport axios from 'axios';\r\nimport { msgError, msgSuccess, apiUrl, tokenApi, getSessionCurrentUrl } from './../../assets/custom/custom.js'\r\n\r\nexport default {\r\n    data () {\r\n        return {\r\n            supplier_name: '',\r\n            receiving_no: '',\r\n            date_now: '',\r\n            p_po: this.$route.query.po_no,\r\n            p_remarks: '',\r\n            p_barcode: '',\r\n            p_qty: 1,\r\n            p_inv_no: '',\r\n            p_order_no: '',\r\n            p_temp_id: '',\r\n            file: '',\r\n            total_sku: 0,\r\n            total_qty_receive: 0,\r\n            total_qty_ordered: 0,\r\n            total_qty_scanned: 0,\r\n            total_sku_remaining: 0,\r\n            total_remaining_item: 0,\r\n            loading_po: false,\r\n            loading_barcode: false,\r\n            btn_post: true,\r\n            deviceScan: false,\r\n            loading_post: false,\r\n            po_items: [],\r\n            temporary_items: []\r\n        }\r\n    },\r\n    async mounted(){\r\n        await this.getPlatform()\r\n        getSessionCurrentUrl(this, 'ReceivePoFree')\r\n    },\r\n    methods: {\r\n        async fetch_po() {\r\n            this.loading_po = true //activate loading\r\n            try {\r\n                let p_po    = this.p_po\r\n                let result  = await axios.get(apiUrl('purchaser/receive_po_free/fetch_po?p_po='+p_po), tokenApi())\r\n                let data    = result.data\r\n                let temp_id = data.temp_id\r\n\r\n                this.p_inv_no       = data.inv_no\r\n                this.supplier_name  = data.supplier_name\r\n                this.date_now       = data.to_date\r\n                this.p_temp_id      = temp_id\r\n                \r\n                await this.fetch_temporary_items(p_po, temp_id)\r\n            } catch (error) {\r\n\r\n                await this.handdleError(error)\r\n            }\r\n            this.loading_po = false //deactivate loading\r\n        },\r\n        async fetch_temporary_items(p_po, p_temp_id) {\r\n            try {\r\n                let result = await axios.get(apiUrl('purchaser/receive_po_free/fetch_temporary_items?p_po='+p_po+'&p_temp_id='+p_temp_id), tokenApi())\r\n                let data   = result.data\r\n                 this.btn_post       = (data.temporary_items.length == 0) ? true : false\r\n\r\n                this.p_order_no     = data.order_no\r\n                this.po_items       = data.po_items\r\n                this.temporary_items= data.temporary_items\r\n\r\n                this.total_sku           = data.total_sku\r\n                this.total_qty_receive   = data.total_qty_receive\r\n                this.total_qty_ordered   = data.total_qty_ordered\r\n                this.total_qty_scanned   = data.total_qty_scanned\r\n                this.total_sku_remaining = data.po_items.length - data.temporary_items.length\r\n                this.total_remaining_item= data.total_qty_ordered - data.total_qty_scanned\r\n            } catch (error) {\r\n                await this.handdleError(error)\r\n            }\r\n        },\r\n        async fetch_barcode() {\r\n            this.loading_barcode = true //activate loading\r\n            try {\r\n                let data  = {\r\n                    p_barcode: $('#item_barcode').val(),\r\n                    p_qty: this.p_qty,\r\n                    p_po: this.p_po,\r\n                    p_order_no: this.p_order_no,\r\n                    p_temp_id: this.p_temp_id,\r\n                    p_inv_no: this.p_inv_no\r\n                }\r\n       \r\n                let result = await axios.post(apiUrl('purchaser/receive_po_free/fetch_barcode'), data, tokenApi())\r\n                let res    = result.data\r\n                \r\n                this.p_temp_id = res.p_temp_id\r\n                await this.fetch_temporary_items(this.p_po, this.p_temp_id)\r\n            } catch (error) {\r\n                await this.handdleError(error)\r\n            }\r\n            this.p_barcode = \"\"\r\n            this.p_qty = 1\r\n            this.loading_barcode = false //deactivate loading\r\n        },\r\n        async delete_items(temp_receiving_id, id) {\r\n            try {\r\n                let confirm = window.confirm('Confirm delete');\r\n                if(confirm) {\r\n                    let data = {\r\n                        p_temp_id: temp_receiving_id,\r\n                        p_po: this.p_po, \r\n                        p_id: id\r\n                    }\r\n                    let result = await axios.post(apiUrl('purchaser/receive_po_free/delete_items'), data, tokenApi())\r\n                    let res   = result.data\r\n                        \r\n                    await this.fetch_temporary_items(this.p_po, temp_receiving_id)\r\n                    msgSuccess(200, \"Successfully deleted items\")\r\n                    if (res.count_items == 1) {\r\n                            await this.refresh()\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                this.handdleError(error)\r\n            }\r\n            \r\n        },\r\n\r\n        async post_receiving(){\r\n            try{\r\n                let formData = new FormData()\r\n                if (this.file == \"\") {\r\n                    return msgError(401, \"Invoice file is required\")\r\n                }\r\n                this.btn_post = true\r\n                this.loading_post = true\r\n                for (let i = 0; i < this.file.length; i++) {\r\n                    let file = this.file[i]\r\n                    formData.append('file[' + i + ']', file);\r\n                }\r\n                formData.append('p_inv_no', this.p_inv_no)\r\n                formData.append('p_po', this.p_po)\r\n                formData.append('p_temp_id', this.p_temp_id)\r\n                formData.append('p_remarks', this.p_remarks)\r\n\r\n                let result = await axios.post(apiUrl('purchaser/receive_po_free/post_receiving'), formData, tokenApi())\r\n                let res    = result.data\r\n\r\n                this.$session.flash.set('receiving_no', res.receiving_no)\r\n                this.receiving_no = this.$session.flash.get('receiving_no')\r\n                this.$router.push({ name: 'ReceivePoFree' })\r\n                await this.refresh()\r\n\r\n            }catch(error){\r\n                this.handdleError(error)\r\n            }\r\n            this.btn_post = false\r\n            this.loading_post = false\r\n        },\r\n        async handdleError(error=null) {\r\n            if (error != null) {\r\n                const response = JSON.parse(JSON.stringify(error))\r\n                const status = response.response.status.toString()\r\n                const message = (response.response.data.error === undefined) ? response.response.data.message : response.response.data.error.message\r\n                msgError(status, message)\r\n                return true\r\n            }\r\n                msgError(401, \"Something Wrong\")\r\n        },\r\n        async handleFileUpload() {\r\n            this.file = this.$refs.file.files;\r\n        },\r\n        async refresh() {\r\n            let input = this.$refs.file;\r\n            input.type = 'text';\r\n            input.type = 'file';\r\n            this.file          = ''\r\n            this.supplier_name = '',\r\n            this.date_now      = '',\r\n            this.p_po          = '',\r\n            this.p_remarks     = '',\r\n            this.p_barcode     = '',\r\n            this.p_qty         = 1,\r\n            this.p_inv_no      = '',\r\n            this.p_order_no    = '',\r\n            this.p_temp_id     = '',\r\n            this.total_sku     = 0,\r\n            this.total_qty_receive    = 0,\r\n            this.total_qty_ordered    = 0,\r\n            this.total_qty_scanned    = 0,\r\n            this.total_sku_remaining  = 0,\r\n            this.total_remaining_item = 0,\r\n            this.loading_po      = false,\r\n            this.loading_barcode = false,\r\n            this.po_items        = [],\r\n            this.temporary_items = []\r\n      },\r\n      async  getPlatform() {\r\n        let platform = [\"Win32\", \"Android\", \"iOS\", \"Linux armv8l\"];\r\n        for (let i = 0; i < platform.length; i++) {\r\n            if (navigator.platform.indexOf(platform[i]) >- 1) {\r\n              if(platform[i] == 'Linux armv8l') {\r\n                this.deviceScan = true\r\n              }\r\n            }\r\n        }\r\n      },\r\n      async openscan(){\r\n          window.qsprint.openscan()\r\n      },\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\ninput, textarea {\r\n  border-radius: 0px !important;\r\n   font-size: 10px !important;\r\n   text-align:center;\r\n   resize: none;\r\n}\r\n.btn {\r\n    border-radius: 0px;\r\n}\r\nth,td {\r\n  padding: 10px !important;\r\n  font-size: 10px;\r\n  text-align: center !important;\r\n}\r\n.title{\r\n    text-align:center;\r\n}\r\n</style>\r\n\r\n"]}]}